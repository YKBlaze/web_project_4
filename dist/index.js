!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}var n,r;return n=t,(r=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}},{key:"_toggleButtonState",value:function(e,t){e.some((function(e){return!e.validity.valid}))?(t.classList.add(this._inactiveButtonClass),t.disabled=!0):(t.classList.remove(this._inactiveButtonClass),t.disabled=!1)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e,e.validationMessage):this._showInputError(e,e.validationMessage)}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState(e._inputList,e._buttonElement)}))}))}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(this._inputList,this._buttonElement),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&e(n.prototype,r),t}(),n={inputSelector:".modal__input",submitButtonSelector:".modal__save",inactiveButtonClass:"modal__save_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n,r,o,i,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._likes=t.likes,this._ownerId=t.owner._id,this._template=n,this._onImageClick=r,this._handleDeleteCard=o,this._like=a,this._id=t._id,this._userId=i,this._isLiked=!1}var t,n;return t=e,(n=[{key:"removeCard",value:function(){this._element.remove(),this._element=null}},{key:"likeCard",value:function(e){this._likes=e,this._element.querySelector(".element__like-count").textContent=this._likes.length,this._element.querySelector(".element__like-button").classList.add("element__like-button_active")}},{key:"dislikeCard",value:function(e){this._likes=e,this._element.querySelector(".element__like-count").textContent=this._likes.length,this._element.querySelector(".element__like-button").classList.remove("element__like-button_active")}},{key:"_handleImage",value:function(){this._onImageClick({link:this._link,text:this._name})}},{key:"_addEventListeners",value:function(){var e=this;this._element.querySelector(".element__like-button").addEventListener("click",(function(){return e._like(e._id)})),this._element.querySelector(".element__delete-button").addEventListener("click",(function(){return e._handleDeleteCard(e._id)})),this._element.querySelector(".element__image-button").addEventListener("click",(function(){return e._handleImage(e._element)}))}},{key:"render",value:function(){return this._element=this._template.cloneNode(!0),this._element=this._element.querySelector(".element"),this._element.querySelector(".element__image").src=this._link,this._element.querySelector(".element__image").alt="Image of ".concat(this._link),this._element.querySelector(".element__title").textContent=this._name,this._ownerId!==this._userId&&(this._element.querySelector(".element__delete-button").style.display="none"),this._element.querySelector(".element__like-count").textContent=this._likes.length,this.isLiked()&&this._element.querySelector(".element__like-button").classList.add("element__like-button_active"),this._addEventListeners(),this._element}},{key:"isLiked",value:function(){var e=this;return this._isLiked=this._likes.some((function(t){return t._id===e._userId})),this._isLiked}}])&&r(t.prototype,n),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscapeClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(t),this._submitButton=this._popup.querySelector(".modal__save"),this._overlay=document.querySelector(".page__overlay"),this.close.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){document.addEventListener("keyup",this._handleEscapeClose),this._popup.classList.add("modal_opened"),this._overlay.classList.remove("page__overlay_disabled")}},{key:"close",value:function(){document.removeEventListener("keyup",this._handleEscapeClose),this._popup.classList.remove("modal_opened"),this._overlay.classList.add("page__overlay_disabled")}},{key:"setEventListeners",value:function(){var e=this;document.addEventListener("click",(function(t){(t.target.classList.contains("page__wrapper")||t.target.classList.contains("page")||t.target.parentElement.classList.contains("modal__close"))&&e.close()}))}},{key:"loading",value:function(){this._submitButton.textContent="Checking..."}},{key:"loaded",value:function(){this._submitButton.textContent="".concat(this._submitButtonDefault)}}])&&i(t.prototype,n),e}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function u(e,t){return u=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},u(e,t)}function s(e,t){if(t&&("object"===l(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return c(e)}function c(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=d(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function d(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}function h(e){return h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},h(e)}var p=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&u(e,t)}(o,e);var t,n,r=(t=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=h(t);if(n){var o=h(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return s(this,e)});function o(e){var t,n,i,a,l;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),l=function(e){var r=e.link,i=e.text;n._imageElement.src=r,n._imageElement.alt="Image of ".concat(r),n._imageCaption.textContent=i,f((t=c(n),h(o.prototype)),"open",t).call(t)},(a="open")in(i=c(n=r.call(this,e)))?Object.defineProperty(i,a,{value:l,enumerable:!0,configurable:!0,writable:!0}):i.open=l,n._imageElement=n._popup.querySelector(".modal__image"),n._imageCaption=n._popup.querySelector(".modal__footer"),n}return o}(a);function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function _(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=b(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},v.apply(this,arguments)}function b(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}function g(e,t){return g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},g(e,t)}function k(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&g(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return k(this,e)});function a(e,t){var n,r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._submitHandler=t,n._form=n._popup.querySelector(".modal__form"),n._inputs=function(e){if(Array.isArray(e))return _(e)}(r=n._form.querySelectorAll(".modal__input"))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(r)||function(e,t){if(e){if("string"==typeof e)return _(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_(e,t):void 0}}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n._inputValues={},n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputs.forEach((function(t){e._inputValues[t.name]=t.value})),this._inputValues}},{key:"setEventListeners",value:function(){var e=this;v(w(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(){return e._submitHandler(e._getInputValues())}))}},{key:"open",value:function(){v(w(a.prototype),"open",this).call(this),this._submitButtonDefault=this._submitButton.textContent}},{key:"close",value:function(){v(w(a.prototype),"close",this).call(this),this._form.reset()}}])&&m(t.prototype,n),a}(a);function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var C=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){e._element=e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&S(t.prototype,n),e}();function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=P(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},j.apply(this,arguments)}function P(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}function I(e,t){return I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},I(e,t)}function q(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function x(e){return x=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},x(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&I(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(r);if(o){var n=x(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return q(this,e)});function a(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),i.call(this,e)}return t=a,(n=[{key:"setAction",value:function(e){this._submitHandler=e}},{key:"setEventListeners",value:function(){var e=this;j(x(a.prototype),"setEventListeners",this).call(this),this._popup.addEventListener("submit",(function(t){t.preventDefault(),e._submitHandler()}))}},{key:"open",value:function(){j(x(a.prototype),"open",this).call(this),this._submitButtonDefault=this._submitButton.textContent}}])&&O(t.prototype,n),a}(a);function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var T=function(){function e(t){var n=t.name,r=t.job;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._job=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,job:this._job.textContent}}},{key:"setUserInfo",value:function(e){var t=e.title,n=e.about;this._name.textContent=t,this._job.textContent=n}}])&&R(t.prototype,n),e}();function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var A,V=function(e,t){return fetch(e,t).then((function(e){return e.ok?e.json():Promise.reject(e.statusText)})).catch(console.log)},D=new(function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return V("".concat(this._baseUrl,"/cards"),{headers:this._headers})}},{key:"getUserInfo",value:function(){return V("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}},{key:"setUserInfo",value:function(e){return V("".concat(this._baseUrl,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify(e)})}},{key:"createCard",value:function(e){return V("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify(e)})}},{key:"deleteCard",value:function(e){return V("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"})}},{key:"likeCard",value:function(e){return V("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"})}},{key:"removeLike",value:function(e){return V("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"DELETE"})}},{key:"updateProfile",value:function(e){return V("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify(e)})}}])&&U(t.prototype,n),e}())({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"9b991f86-368d-4ef3-963c-b91580821c46","Content-Type":"application/json"}});function H(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}Promise.all([D.getInitialCards(),D.getUserInfo()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,l=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){l=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(l)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return H(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?H(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];A=i._id,o.forEach((function(e){ae(e)})),te.setUserInfo({title:i.name,about:i.about})})).catch((function(e){console.log(e)}));var M=document.querySelector(".profile__edit-button"),N=document.querySelector(".profile__image"),J=document.querySelector(".profile__add-button"),Y=document.querySelector(".modal_type_add-card"),$=document.querySelector(".modal_type_edit-card"),z=document.querySelector(".modal_type_profile-edit"),F=document.querySelector("#title"),G=document.querySelector("#about"),K=document.querySelector("#element").content,Q=new p(".modal_type_image-card");Q.setEventListeners();var W=new E(".modal_type_add-card",(function(e){W.loading(),D.createCard({name:e.title,link:e.imagelink}).then((function(e){ae(e),W.close(),W.loaded()})).catch((function(e){console.log(e)}))}));W.setEventListeners();var X=new E(".modal_type_edit-card",(function(e){X.loading(),D.setUserInfo({name:e.title,about:e.about}).then((function(t){te.setUserInfo(e),X.loaded()})).catch((function(e){console.log(e)})),X.close()}));X.setEventListeners();var Z=new B(".modal_type_confirm");Z.setEventListeners();var ee=new E(".modal_type_profile-edit",(function(e){ee.loading(),D.updateProfile({avatar:e.profilelink}).then((function(t){N.src=e.profilelink,ee.loaded()})).catch((function(e){console.log(e)})),ee.close()}));ee.setEventListeners();var te=new T({name:".profile__name",job:".profile__about-me"}),ne=new C({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg",alt:"Yosemite Valley"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg",alt:"Lake Louise"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg",alt:"Bald Mountains"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg",alt:"Latemar"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg",alt:"Vanoise National Park"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg",alt:"Lago di Braies"}],renderer:function(e){ae(e)}},".elements");M.addEventListener("click",(function(){var e=te.getUserInfo();F.value=e.name,G.value=e.job,X.open(),re.resetValidation()})),J.addEventListener("click",(function(){W.open(),oe.resetValidation()})),N.addEventListener("click",(function(){ee.open(),ie.resetValidation()}));var re=new t(n,$);re.enableValidation();var oe=new t(n,Y);oe.enableValidation();var ie=new t(n,z);function ae(e){var t=new o(e,K,Q.open,(function(e){Z.open(),Z.setAction((function(){D.deleteCard(e).then((function(e){t.removeCard(),Z.close()})).catch((function(e){console.log(e)}))}))}),A,(function(e){t.isLiked()?D.removeLike(e).then((function(e){t.dislikeCard(e.likes)})).catch((function(e){console.log(e)})):D.likeCard(e).then((function(e){t.likeCard(e.likes)})).catch((function(e){console.log(e)}))}));ne.addItem(t.render())}ie.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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R2hCcEIsRUFBSXdELFNBQVMzSyxHQUNaeUcsTUFBSyxTQUFBQyxHQUNGMkQsRUFBS00sU0FBU2pFLEVBQUl6RSxVQUVyQitFLE9BQU0sU0FBQ3VCLEdBQ0p0QixRQUFRQyxJQUFJcUIsU0FJeEJ1QixHQUFtQmMsUUFBUVAsRUFBS1EsVUFsQ3BDVixHQUFxQkMsbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcmFjdGljdW0tcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLXByb2plY3QvLi9zcmMvdXRpbHMvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLXByb2plY3QvLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS1wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLXByb2plY3QvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0tcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLXByb2plY3QvLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS1wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoU3VibWl0LmpzIiwid2VicGFjazovL3ByYWN0aWN1bS1wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLXByb2plY3QvLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLXByb2plY3QvLi9zcmMvcGFnZS9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICAgIGNvbnN0cnVjdG9yKHNldHRpbmdzLCBmb3JtRWxlbWVudCl7XHJcbiAgICAgICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IHNldHRpbmdzLmlucHV0U2VsZWN0b3I7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBzZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcclxuICAgICAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgICAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBzZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICAgICAgdGhpcy5fZXJyb3JDbGFzcyA9IHNldHRpbmdzLmVycm9yQ2xhc3M7XHJcbiAgICAgICAgdGhpcy5fZm9ybUVsZW1lbnQgPSBmb3JtRWxlbWVudDtcclxuICAgICAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvcikpO1xyXG4gICAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuICAgIH1cclxuICAgIF9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIHZhbGlkYXRpb25NZXNzYWdlKSB7XHJcbiAgICAgICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICAgICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gdmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICAgICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgICB9XHJcbiAgICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcbiAgICAgICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICAgICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcclxuICAgICAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcclxuICAgIH1cclxuICAgIF90b2dnbGVCdXR0b25TdGF0ZShpbnB1dEVsZW1lbnRzLCBidXR0b25FbGVtZW50KXtcclxuICAgICAgICBjb25zdCBoYXNJbnZhbGlkSW5wdXQgPSBpbnB1dEVsZW1lbnRzLnNvbWUoaW5wdXRFbGVtZW50ID0+ICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpO1xyXG4gICAgICAgIGlmIChoYXNJbnZhbGlkSW5wdXQpe1xyXG4gICAgICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgICBidXR0b25FbGVtZW50LmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgICBidXR0b25FbGVtZW50LmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpe1xyXG4gICAgICAgIGlmKGlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCl7XHJcbiAgICAgICAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlKTtcclxuICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2UpO1xyXG4gICAgICAgICB9ICBcclxuICAgIH1cclxuICAgIF9zZXRFdmVudExpc3RlbmVycygpe1xyXG4gICAgICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKGlucHV0RWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUodGhpcy5faW5wdXRMaXN0LCB0aGlzLl9idXR0b25FbGVtZW50KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICByZXNldFZhbGlkYXRpb24oKSB7XHJcbiAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKHRoaXMuX2lucHV0TGlzdCx0aGlzLl9idXR0b25FbGVtZW50KTsgXHJcbiAgICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSBcclxuICAgICAgfSk7XHJcblxyXG4gICAgfVxyXG4gICAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgICAgICB0aGlzLl9mb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBlID0+IHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEZvcm1WYWxpZGF0b3I7IiwiZXhwb3J0IGZ1bmN0aW9uIGNsb3NlQnlFc2NhcGUoZXZ0KXtcclxuICAgIGlmKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpe1xyXG4gICAgICAgIGNvbnN0IG9wZW5lZFBvcHVwICA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbF9vcGVuZWQnKTtcclxuICAgICAgICBjbG9zZU1vZGFsKG9wZW5lZFBvcHVwKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGZvcm1TZXR0aW5ncyA9IHtcclxuICAgIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxyXG4gICAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19zYXZlXCIsXHJcbiAgICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19zYXZlX2Rpc2FibGVkXCIsXHJcbiAgICBpbnB1dEVycm9yQ2xhc3M6IFwibW9kYWxfX2lucHV0X3R5cGVfZXJyb3JcIixcclxuICAgIGVycm9yQ2xhc3M6IFwibW9kYWxfX2Vycm9yX3Zpc2libGVcIlxyXG4gIH1cclxuXHJcbmZ1bmN0aW9uIGNsaWNrQ2xvc2UoZXZ0KSB7XHJcbiAgICBjb25zdCBwYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBhZ2UnKTtcclxuICAgIGNvbnN0IHBhZ2VXcmFwcGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBhZ2VfX3dyYXBwZXInKTtcclxuICAgIGlmICgoZXZ0LnRhcmdldCA9PT0gcGFnZSl8fChldnQudGFyZ2V0ID09PSBwYWdlV3JhcHBlcikpIHtcclxuICAgICAgY29uc3Qgb3BlbmVkUG9wdXAgID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsX29wZW5lZCcpO1xyXG4gICAgICBjbG9zZU1vZGFsKG9wZW5lZFBvcHVwKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG9wZW5Nb2RhbChtb2RhbFdpbmRvdykge1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCBjbG9zZUJ5RXNjYXBlKTtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY2xpY2tDbG9zZSk7XHJcbiAgICBtb2RhbFdpbmRvdy5jbGFzc0xpc3QuYWRkKGBtb2RhbF9vcGVuZWRgKTtcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wYWdlX19vdmVybGF5JykuY2xhc3NMaXN0LnJlbW92ZSgncGFnZV9fb3ZlcmxheV9kaXNhYmxlZCcpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY2xvc2VNb2RhbChtb2RhbFdpbmRvdykge1xyXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5dXAnICwgY2xvc2VCeUVzY2FwZSk7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycgLCBjbGlja0Nsb3NlKTtcclxuICAgIG1vZGFsV2luZG93LmNsYXNzTGlzdC5yZW1vdmUoYG1vZGFsX29wZW5lZGApO1xyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBhZ2VfX292ZXJsYXknKS5jbGFzc0xpc3QuYWRkKCdwYWdlX19vdmVybGF5X2Rpc2FibGVkJyk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBpbml0aWFsQ2FyZHMgPSBbe1xyXG4gICAgbmFtZTogXCJZb3NlbWl0ZSBWYWxsZXlcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUveW9zZW1pdGUuanBnXCIsXHJcbiAgICBhbHQ6ICBcIllvc2VtaXRlIFZhbGxleVwiXHJcbn0sXHJcbntcclxuICAgIG5hbWU6IFwiTGFrZSBMb3Vpc2VcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGFrZS1sb3Vpc2UuanBnXCIsXHJcbiAgICBhbHQ6ICBcIkxha2UgTG91aXNlXCJcclxufSxcclxue1xyXG4gICAgbmFtZTogXCJCYWxkIE1vdW50YWluc1wiLFxyXG4gICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS9iYWxkLW1vdW50YWlucy5qcGdcIixcclxuICAgIGFsdDogIFwiQmFsZCBNb3VudGFpbnNcIlxyXG59LFxyXG57XHJcbiAgICBuYW1lOiBcIkxhdGVtYXJcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGF0ZW1hci5qcGdcIixcclxuICAgIGFsdDogIFwiTGF0ZW1hclwiXHJcbn0sXHJcbntcclxuICAgIG5hbWU6IFwiVmFub2lzZSBOYXRpb25hbCBQYXJrXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL3Zhbm9pc2UuanBnXCIsXHJcbiAgICBhbHQ6ICBcIlZhbm9pc2UgTmF0aW9uYWwgUGFya1wiXHJcbn0sXHJcbntcclxuICAgIG5hbWU6IFwiTGFnbyBkaSBCcmFpZXNcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGFnby5qcGdcIixcclxuICAgIGFsdDogIFwiTGFnbyBkaSBCcmFpZXNcIlxyXG59XHJcbl07XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xyXG4gICAgY29uc3RydWN0b3IoY2FyZERhdGEsIGNhcmRUZW1wbGF0ZVNlbGVjdG9yLCBvbkltYWdlQ2xpY2ssIGhhbmRsZURlbGV0ZUNhcmQsIHVzZXJJZCwgaGFuZGxlTGlrZUljb24pIHtcclxuICAgICAgICB0aGlzLl9uYW1lID0gY2FyZERhdGEubmFtZTtcclxuICAgICAgICB0aGlzLl9saW5rID0gY2FyZERhdGEubGluaztcclxuICAgICAgICB0aGlzLl9saWtlcyA9IGNhcmREYXRhLmxpa2VzO1xyXG4gICAgICAgIHRoaXMuX293bmVySWQgPSBjYXJkRGF0YS5vd25lci5faWQ7XHJcbiAgICAgICAgdGhpcy5fdGVtcGxhdGUgPSBjYXJkVGVtcGxhdGVTZWxlY3RvcjtcclxuICAgICAgICB0aGlzLl9vbkltYWdlQ2xpY2sgPSBvbkltYWdlQ2xpY2s7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlRGVsZXRlQ2FyZCA9IGhhbmRsZURlbGV0ZUNhcmQ7XHJcbiAgICAgICAgdGhpcy5fbGlrZSA9IGhhbmRsZUxpa2VJY29uO1xyXG4gICAgICAgIHRoaXMuX2lkID0gY2FyZERhdGEuX2lkO1xyXG4gICAgICAgIHRoaXMuX3VzZXJJZCA9IHVzZXJJZDtcclxuICAgICAgICB0aGlzLl9pc0xpa2VkID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJlbW92ZUNhcmQoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsaWtlQ2FyZChuZXdMaWtlcykge1xyXG4gICAgICAgICAgICB0aGlzLl9saWtlcyA9IG5ld0xpa2VzO1xyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19saWtlLWNvdW50JykudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlcy5sZW5ndGg7XHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2xpa2UtYnV0dG9uJykuY2xhc3NMaXN0LmFkZChgZWxlbWVudF9fbGlrZS1idXR0b25fYWN0aXZlYCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBkaXNsaWtlQ2FyZChuZXdMaWtlcykge1xyXG4gICAgICAgICAgICB0aGlzLl9saWtlcyA9IG5ld0xpa2VzO1xyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19saWtlLWNvdW50JykudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlcy5sZW5ndGg7XHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2xpa2UtYnV0dG9uJykuY2xhc3NMaXN0LnJlbW92ZShgZWxlbWVudF9fbGlrZS1idXR0b25fYWN0aXZlYCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIF9oYW5kbGVJbWFnZSgpIHtcclxuICAgICAgICAgICAgdGhpcy5fb25JbWFnZUNsaWNrKHtsaW5rOiB0aGlzLl9saW5rLCB0ZXh0OiB0aGlzLl9uYW1lfSlcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIF9hZGRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fbGlrZS1idXR0b24nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuX2xpa2UodGhpcy5faWQpKTtcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fZGVsZXRlLWJ1dHRvbicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKSA9PiB0aGlzLl9oYW5kbGVEZWxldGVDYXJkKHRoaXMuX2lkKSk7XHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2ltYWdlLWJ1dHRvbicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5faGFuZGxlSW1hZ2UodGhpcy5fZWxlbWVudCkpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmVuZGVyKCkge1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX3RlbXBsYXRlLmNsb25lTm9kZSh0cnVlKTtcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudCA9ICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50Jyk7XHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2ltYWdlJykuc3JjID0gdGhpcy5fbGluaztcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9faW1hZ2UnKS5hbHQgPSBgSW1hZ2Ugb2YgJHt0aGlzLl9saW5rfWA7XHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX3RpdGxlJykudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lOyAgICBcclxuICAgICAgICAgICAgaWYodGhpcy5fb3duZXJJZCAhPT0gdGhpcy5fdXNlcklkKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2RlbGV0ZS1idXR0b24nKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgICB9ICAgICAgIFxyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19saWtlLWNvdW50JykudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlcy5sZW5ndGg7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuaXNMaWtlZCgpKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2xpa2UtYnV0dG9uJykuY2xhc3NMaXN0LmFkZChgZWxlbWVudF9fbGlrZS1idXR0b25fYWN0aXZlYCk7XHJcbiAgICAgICAgICAgIH0gXHJcbiAgICAgICAgICAgIHRoaXMuX2FkZEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaXNMaWtlZCgpe1xyXG4gICAgICAgICAgICB0aGlzLl9pc0xpa2VkID0gdGhpcy5fbGlrZXMuc29tZSgocGVyc29uKSA9PiBwZXJzb24uX2lkID09PSB0aGlzLl91c2VySWQpO1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5faXNMaWtlZDtcclxuICAgICAgICB9XHJcbiAgICB9IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX3NhdmUnKTtcclxuICAgICAgICB0aGlzLl9vdmVybGF5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLnBhZ2VfX292ZXJsYXlgKTtcclxuICAgICAgICB0aGlzLmNsb3NlLmJpbmQodGhpcyk7XHJcbiAgICB9XHJcbiAgICBvcGVuKCl7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB0aGlzLl9oYW5kbGVFc2NhcGVDbG9zZSk7XHJcbiAgICAgICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZChgbW9kYWxfb3BlbmVkYCk7XHJcbiAgICAgICAgdGhpcy5fb3ZlcmxheS5jbGFzc0xpc3QucmVtb3ZlKCdwYWdlX19vdmVybGF5X2Rpc2FibGVkJyk7XHJcbiAgICB9XHJcbiAgICBjbG9zZSgpe1xyXG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleXVwJywgdGhpcy5faGFuZGxlRXNjYXBlQ2xvc2UpO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoYG1vZGFsX29wZW5lZGApO1xyXG4gICAgICAgIHRoaXMuX292ZXJsYXkuY2xhc3NMaXN0LmFkZCgncGFnZV9fb3ZlcmxheV9kaXNhYmxlZCcpO1xyXG4gICAgfVxyXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKXtcclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldnQpID0+IHtcclxuICAgICAgICAgICAgaWYoZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoYHBhZ2VfX3dyYXBwZXJgKSB8fCBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhgcGFnZWApIHx8IGV2dC50YXJnZXQucGFyZW50RWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ21vZGFsX19jbG9zZScpKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pOyBcclxuICAgICAgICBcclxuICAgIH1cclxuICAgIF9oYW5kbGVFc2NhcGVDbG9zZSA9IChldnQpID0+IHtcclxuICAgICAgICBpZihldnQua2V5ID09PSBcIkVzY2FwZVwiKXtcclxuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGxvYWRpbmcoKXtcclxuICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBcIkNoZWNraW5nLi4uXCJcclxuICAgIH1cclxuICAgIGxvYWRlZCgpe1xyXG4gICAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IGAke3RoaXMuX3N1Ym1pdEJ1dHRvbkRlZmF1bHR9YDtcclxuICAgIH1cclxufSIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgICAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9pbWFnZUVsZW1lbnQgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX2ltYWdlJyk7XHJcbiAgICAgICAgdGhpcy5faW1hZ2VDYXB0aW9uID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLm1vZGFsX19mb290ZXInKTtcclxuICAgIH1cclxuICAgIG9wZW4gPSAoeyBsaW5rLCB0ZXh0IH0pID0+IHtcclxuICAgICAgICB0aGlzLl9pbWFnZUVsZW1lbnQuc3JjID0gbGluaztcclxuICAgICAgICB0aGlzLl9pbWFnZUVsZW1lbnQuYWx0ID0gYEltYWdlIG9mICR7bGlua31gO1xyXG4gICAgICAgIHRoaXMuX2ltYWdlQ2FwdGlvbi50ZXh0Q29udGVudCA9IHRleHQ7XHJcbiAgICAgICAgc3VwZXIub3BlbigpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVTdWJtaXRGb3JtKSB7XHJcbiAgICAgICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0SGFuZGxlciA9IGhhbmRsZVN1Ym1pdEZvcm07XHJcbiAgICAgICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbF9fZm9ybScpO1xyXG4gICAgICAgIHRoaXMuX2lucHV0cyA9IFsuLi50aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoJy5tb2RhbF9faW5wdXQnKV07XHJcbiAgICAgICAgdGhpcy5faW5wdXRWYWx1ZXMgPSB7fTtcclxuICAgIH1cclxuICAgIF9nZXRJbnB1dFZhbHVlcygpe1xyXG4gICAgICAgIHRoaXMuX2lucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9pbnB1dFZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lucHV0VmFsdWVzO1xyXG4gICAgfVxyXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKXtcclxuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKCkgPT4gdGhpcy5fc3VibWl0SGFuZGxlcih0aGlzLl9nZXRJbnB1dFZhbHVlcygpKSk7XHJcbiAgICB9XHJcbiAgICBvcGVuKCl7XHJcbiAgICAgICAgc3VwZXIub3BlbigpO1xyXG4gICAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbkRlZmF1bHQgPSB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQ7XHJcbiAgICB9XHJcbiAgICBjbG9zZSgpe1xyXG4gICAgICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICAgICAgdGhpcy5fZm9ybS5yZXNldCgpO1xyXG4gICAgfVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9ICwgY2xhc3NTZWxlY3Rvcikge1xyXG4gICAgICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XHJcbiAgICAgICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcclxuICAgICAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNsYXNzU2VsZWN0b3IpO1xyXG4gICAgfVxyXG4gICAgcmVuZGVySXRlbXMoKXtcclxuICAgICAgICB0aGlzLl9pdGVtcy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fcmVuZGVyZXIoZWxlbWVudCk7XHJcbiAgICAgICAgfSkgIFxyXG4gICAgfVxyXG4gICAgYWRkSXRlbSAoZWxlbWVudCl7XHJcbiAgICAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcclxuICAgIH1cclxuXHJcbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aFN1Ym1pdCBleHRlbmRzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgICAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIH1cclxuICAgICBzZXRBY3Rpb24oYWN0aW9uKSB7XHJcbiAgICAgICAgIHRoaXMuX3N1Ym1pdEhhbmRsZXIgPSBhY3Rpb247XHJcbiAgICAgfVxyXG5cclxuICAgICBzZXRFdmVudExpc3RlbmVycygpe1xyXG4gICAgICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICAgICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChlKSA9PiB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsgXHJcbiAgICAgICAgICAgIHRoaXMuX3N1Ym1pdEhhbmRsZXIoKTtcclxuICAgICAgICAgfSk7ICAgXHJcbiAgICAgfVxyXG4gICAgIG9wZW4oKXtcclxuICAgICAgICBzdXBlci5vcGVuKCk7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9uRGVmYXVsdCA9IHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudDtcclxuICAgIH1cclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcclxuICAgIGNvbnN0cnVjdG9yKHsgbmFtZSwgam9iIH0pe1xyXG4gICAgICAgIHRoaXMuX25hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKG5hbWUpO1xyXG4gICAgICAgIHRoaXMuX2pvYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioam9iKTtcclxuICAgIH1cclxuICAgIGdldFVzZXJJbmZvKCl7XHJcbiAgICAgICAgcmV0dXJuIHsgXHJcbiAgICAgICAgICAgIG5hbWU6IHRoaXMuX25hbWUudGV4dENvbnRlbnQsXHJcbiAgICAgICAgICAgIGpvYjogdGhpcy5fam9iLnRleHRDb250ZW50XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgc2V0VXNlckluZm8oeyB0aXRsZSwgYWJvdXQgfSl7XHJcbiAgICAgICAgdGhpcy5fbmFtZS50ZXh0Q29udGVudCA9IHRpdGxlO1xyXG4gICAgICAgIHRoaXMuX2pvYi50ZXh0Q29udGVudCA9IGFib3V0O1xyXG4gICAgfVxyXG59IiwiY29uc3QgY3VzdG9tRmV0Y2ggPSAodXJsICwgaGVhZGVycykgPT4gXHJcbiAgICBmZXRjaCh1cmwgLCBoZWFkZXJzKVxyXG4gICAgLnRoZW4ocmVzID0+IHJlcy5vayA/IHJlcy5qc29uKCkgOiBQcm9taXNlLnJlamVjdChyZXMuc3RhdHVzVGV4dCkpXHJcbiAgICAuY2F0Y2goY29uc29sZS5sb2cpO1xyXG5cclxuY2xhc3MgQXBpe1xyXG4gICAgY29uc3RydWN0b3Ioe2Jhc2VVcmwsIGhlYWRlcnN9KSB7XHJcbiAgICAgICAgdGhpcy5fYmFzZVVybCA9IGJhc2VVcmw7XHJcbiAgICAgICAgdGhpcy5faGVhZGVycyA9IGhlYWRlcnM7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0SW5pdGlhbENhcmRzKCl7XHJcbiAgICAgICAgcmV0dXJuIGN1c3RvbUZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xyXG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBnZXRVc2VySW5mbygpe1xyXG4gICAgICAgIHJldHVybiBjdXN0b21GZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVyc1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgc2V0VXNlckluZm8oZGF0YSl7XHJcbiAgICAgICAgcmV0dXJuIGN1c3RvbUZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICAgICAgICBtZXRob2Q6ICdQQVRDSCcsXHJcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpICBcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG4gICAgY3JlYXRlQ2FyZChkYXRhKSB7XHJcbiAgICAgICAgcmV0dXJuIGN1c3RvbUZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xyXG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSlcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIGRlbGV0ZUNhcmQoY2FyZElkKSB7XHJcbiAgICAgICAgcmV0dXJuIGN1c3RvbUZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfWAsIHtcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICAgICAgbWV0aG9kOiAnREVMRVRFJyxcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG4gICAgbGlrZUNhcmQoY2FyZElkKSB7XHJcbiAgICAgICAgcmV0dXJuIGN1c3RvbUZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzL2xpa2VzLyR7Y2FyZElkfWAsIHtcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICAgICAgbWV0aG9kOiAnUFVUJyxcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG4gICAgcmVtb3ZlTGlrZShjYXJkSWQpIHtcclxuICAgICAgICByZXR1cm4gY3VzdG9tRmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkSWR9YCwge1xyXG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICAgICAgICBtZXRob2Q6ICdERUxFVEUnLFxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbiAgICB1cGRhdGVQcm9maWxlKGRhdGEpIHtcclxuICAgICAgICByZXR1cm4gY3VzdG9tRmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWUvYXZhdGFyYCwge1xyXG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICAgICAgICBtZXRob2Q6ICdQQVRDSCcsXHJcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxufVxyXG5leHBvcnQgY29uc3QgYXBpID0gbmV3IEFwaSh7XHJcbiAgICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvZ3JvdXAtMTJcIixcclxuICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBhdXRob3JpemF0aW9uOiBcIjliOTkxZjg2LTM2OGQtNGVmMy05NjNjLWI5MTU4MDgyMWM0NlwiLFxyXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXHJcbiAgICB9XHJcbn0pOyIsImltcG9ydCBcIi4vaW5kZXguY3NzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IHsgaW5pdGlhbENhcmRzLCBmb3JtU2V0dGluZ3MsIGxvYWRpbmd9IGZyb20gXCIuLi91dGlscy91dGlscy5qc1wiO1xyXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBQb3B1cCBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cC5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xyXG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhTdWJtaXQgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoU3VibWl0XCI7XHJcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xyXG5pbXBvcnQgeyBhcGkgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9BcGkuanNcIjtcclxuXHJcbmxldCB1c2VySWQ7XHJcblByb21pc2UuYWxsKFthcGkuZ2V0SW5pdGlhbENhcmRzKCksIGFwaS5nZXRVc2VySW5mbygpXSlcclxuLnRoZW4oKFtjYXJkcywgdXNlckluZm9dKSA9PiB7XHJcbiAgICB1c2VySWQgPSB1c2VySW5mby5faWQ7XHJcbiAgICBjYXJkcy5mb3JFYWNoKGNhcmREYXRhID0+IHtcclxuICAgICAgICBjcmVhdGVDYXJkKGNhcmREYXRhKTtcclxuICAgIH0pO1xyXG4gICAgdXNlckRhdGEuc2V0VXNlckluZm8oeyB0aXRsZTogdXNlckluZm8ubmFtZSwgYWJvdXQ6IHVzZXJJbmZvLmFib3V0IH0pO1xyXG59KVxyXG4uY2F0Y2goKGVycikgPT4ge1xyXG4gICAgY29uc29sZS5sb2coZXJyKTtcclxuICB9KTtcclxuXHJcbmNvbnN0IG1vZGFsRWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5wcm9maWxlX19lZGl0LWJ1dHRvbmApO1xyXG5jb25zdCBtb2RhbFByb2ZpbGVFZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLnByb2ZpbGVfX2ltYWdlYCk7XHJcbmNvbnN0IG1vZGFsQWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLnByb2ZpbGVfX2FkZC1idXR0b25gKTtcclxuY29uc3QgbW9kYWxBZGRFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLm1vZGFsX3R5cGVfYWRkLWNhcmRgKTtcclxuY29uc3QgbW9kYWxFZGl0RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5tb2RhbF90eXBlX2VkaXQtY2FyZGApO1xyXG5jb25zdCBtb2RhbFByb2ZpbGVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLm1vZGFsX3R5cGVfcHJvZmlsZS1lZGl0YCk7XHJcbmNvbnN0IHByb2ZpbGVOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3RpdGxlYCk7XHJcbmNvbnN0IHByb2ZpbGVBYm91dE1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI2Fib3V0YCk7XHJcbmNvbnN0IGVsZW1lbnRUZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNlbGVtZW50YCkuY29udGVudDtcclxuXHJcblxyXG5cclxuY29uc3QgbW9kYWxJbWFnZSA9IG5ldyBQb3B1cFdpdGhJbWFnZSgnLm1vZGFsX3R5cGVfaW1hZ2UtY2FyZCcpO1xyXG5tb2RhbEltYWdlLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5jb25zdCBtb2RhbEFkZCA9IG5ldyBQb3B1cFdpdGhGb3JtKGAubW9kYWxfdHlwZV9hZGQtY2FyZGAsIChkYXRhKSA9PiB7XHJcbiAgICBtb2RhbEFkZC5sb2FkaW5nKCk7XHJcbiAgICBhcGkuY3JlYXRlQ2FyZCh7bmFtZTogZGF0YS50aXRsZSwgbGluazogZGF0YS5pbWFnZWxpbmt9KVxyXG4gICAgLnRoZW4ocmVzID0+IHtcclxuICAgICAgICBjcmVhdGVDYXJkKHJlcyk7XHJcbiAgICAgICAgbW9kYWxBZGQuY2xvc2UoKTtcclxuICAgICAgICBtb2RhbEFkZC5sb2FkZWQoKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgIH0pO1xyXG4gICAgICBcclxufSk7XHJcbm1vZGFsQWRkLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5jb25zdCBtb2RhbEVkaXQgPSBuZXcgUG9wdXBXaXRoRm9ybShgLm1vZGFsX3R5cGVfZWRpdC1jYXJkYCwgKGRhdGEpID0+IHtcclxuICAgIG1vZGFsRWRpdC5sb2FkaW5nKCk7XHJcbiAgICBhcGkuc2V0VXNlckluZm8oe25hbWU6IGRhdGEudGl0bGUsIGFib3V0OiBkYXRhLmFib3V0fSlcclxuICAgIC50aGVuKHJlcyA9PntcclxuICAgICAgICB1c2VyRGF0YS5zZXRVc2VySW5mbyhkYXRhKTtcclxuICAgICAgICBtb2RhbEVkaXQubG9hZGVkKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICB9KTtcclxuICAgIG1vZGFsRWRpdC5jbG9zZSgpO1xyXG59KTtcclxubW9kYWxFZGl0LnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5jb25zdCBtb2RhbENvbmZpcm0gPSBuZXcgUG9wdXBXaXRoU3VibWl0KGAubW9kYWxfdHlwZV9jb25maXJtYCk7XHJcbm1vZGFsQ29uZmlybS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgbW9kYWxQcm9maWxlRWRpdD0gbmV3IFBvcHVwV2l0aEZvcm0oYC5tb2RhbF90eXBlX3Byb2ZpbGUtZWRpdGAsKGRhdGEpID0+IHtcclxuICAgIG1vZGFsUHJvZmlsZUVkaXQubG9hZGluZygpO1xyXG4gICAgYXBpLnVwZGF0ZVByb2ZpbGUoe2F2YXRhcjogZGF0YS5wcm9maWxlbGlua30pXHJcbiAgICAudGhlbihyZXMgPT57XHJcbiAgICAgICAgbW9kYWxQcm9maWxlRWRpdEJ1dHRvbi5zcmMgPSBkYXRhLnByb2ZpbGVsaW5rO1xyXG4gICAgICAgIG1vZGFsUHJvZmlsZUVkaXQubG9hZGVkKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICB9KTtcclxuICAgIG1vZGFsUHJvZmlsZUVkaXQuY2xvc2UoKTtcclxufSk7XHJcbm1vZGFsUHJvZmlsZUVkaXQuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IHVzZXJEYXRhID0gbmV3IFVzZXJJbmZvKHtcclxuICAgIG5hbWU6ICcucHJvZmlsZV9fbmFtZScsIGpvYjogJy5wcm9maWxlX19hYm91dC1tZSdcclxufSk7XHJcblxyXG5jb25zdCBpbml0aWFsQ2FyZHNSZW5kZXIgPSBuZXcgU2VjdGlvbih7aXRlbXM6IGluaXRpYWxDYXJkcywgcmVuZGVyZXI6IChlbGVtZW50KT0+e1xyXG4gICAgY3JlYXRlQ2FyZChlbGVtZW50KTtcclxufX0sIFwiLmVsZW1lbnRzXCIpO1xyXG5cclxuXHJcblxyXG5cclxubW9kYWxFZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgY29uc3QgZGF0YSA9IHVzZXJEYXRhLmdldFVzZXJJbmZvKCk7XHJcbiAgICBwcm9maWxlTmFtZS52YWx1ZSA9IGRhdGEubmFtZTtcclxuICAgIHByb2ZpbGVBYm91dE1lLnZhbHVlID0gZGF0YS5qb2I7XHJcbiAgICBtb2RhbEVkaXQub3BlbigpO1xyXG4gICAgZWRpdENhcmRWYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XHJcbiAgfSk7XHJcblxyXG5tb2RhbEFkZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+e1xyXG4gICAgbW9kYWxBZGQub3BlbigpO1xyXG4gICAgYWRkQ2FyZFZhbGlkYXRvci5yZXNldFZhbGlkYXRpb24oKTtcclxufSk7XHJcbm1vZGFsUHJvZmlsZUVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PntcclxuICAgIG1vZGFsUHJvZmlsZUVkaXQub3BlbigpO1xyXG4gICAgcHJvZmlsZUNhcmRWYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XHJcbn0pXHJcblxyXG5cclxuY29uc3QgZWRpdENhcmRWYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihmb3JtU2V0dGluZ3MsIG1vZGFsRWRpdEVsZW1lbnQpO1xyXG5lZGl0Q2FyZFZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbmNvbnN0IGFkZENhcmRWYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihmb3JtU2V0dGluZ3MsIG1vZGFsQWRkRWxlbWVudCk7XHJcbmFkZENhcmRWYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5jb25zdCBwcm9maWxlQ2FyZFZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1TZXR0aW5ncywgbW9kYWxQcm9maWxlRWxlbWVudCk7XHJcbnByb2ZpbGVDYXJkVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUNhcmQoZGF0YSkge1xyXG4gICAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKGRhdGEsIGVsZW1lbnRUZW1wbGF0ZSwgbW9kYWxJbWFnZS5vcGVuLCAoaWQpID0+e1xyXG4gICAgICAgIG1vZGFsQ29uZmlybS5vcGVuKCk7XHJcbiAgICAgICAgbW9kYWxDb25maXJtLnNldEFjdGlvbigoKSA9PiB7XHJcbiAgICAgICAgICAgIGFwaS5kZWxldGVDYXJkKGlkKVxyXG4gICAgICAgICAgICAudGhlbihyZXMgPT4ge1xyXG4gICAgICAgICAgICAgICAgY2FyZC5yZW1vdmVDYXJkKCk7XHJcbiAgICAgICAgICAgICAgICBtb2RhbENvbmZpcm0uY2xvc2UoKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9LCB1c2VySWQsIChpZCkgPT57XHJcbiAgICAgICAgaWYgKGNhcmQuaXNMaWtlZCgpKXtcclxuICAgICAgICAgICAgYXBpLnJlbW92ZUxpa2UoaWQpXHJcbiAgICAgICAgICAgIC50aGVuKHJlcyA9PiB7ICBcclxuICAgICAgICAgICAgICAgIGNhcmQuZGlzbGlrZUNhcmQocmVzLmxpa2VzKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgYXBpLmxpa2VDYXJkKGlkKVxyXG4gICAgICAgICAgICAudGhlbihyZXMgPT4geyAgXHJcbiAgICAgICAgICAgICAgICBjYXJkLmxpa2VDYXJkKHJlcy5saWtlcyk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0pXHJcbiAgICBpbml0aWFsQ2FyZHNSZW5kZXIuYWRkSXRlbShjYXJkLnJlbmRlcigpKTtcclxufSJdLCJuYW1lcyI6WyJGb3JtVmFsaWRhdG9yIiwic2V0dGluZ3MiLCJmb3JtRWxlbWVudCIsInRoaXMiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfZm9ybUVsZW1lbnQiLCJfaW5wdXRMaXN0IiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsIl9idXR0b25FbGVtZW50IiwicXVlcnlTZWxlY3RvciIsImlucHV0RWxlbWVudCIsInZhbGlkYXRpb25NZXNzYWdlIiwiZXJyb3JFbGVtZW50IiwiaWQiLCJjbGFzc0xpc3QiLCJhZGQiLCJ0ZXh0Q29udGVudCIsInJlbW92ZSIsImlucHV0RWxlbWVudHMiLCJidXR0b25FbGVtZW50Iiwic29tZSIsInZhbGlkaXR5IiwidmFsaWQiLCJkaXNhYmxlZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsImZvckVhY2giLCJhZGRFdmVudExpc3RlbmVyIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsIl90b2dnbGVCdXR0b25TdGF0ZSIsImUiLCJwcmV2ZW50RGVmYXVsdCIsIl9zZXRFdmVudExpc3RlbmVycyIsImZvcm1TZXR0aW5ncyIsIkNhcmQiLCJjYXJkRGF0YSIsImNhcmRUZW1wbGF0ZVNlbGVjdG9yIiwib25JbWFnZUNsaWNrIiwiaGFuZGxlRGVsZXRlQ2FyZCIsInVzZXJJZCIsImhhbmRsZUxpa2VJY29uIiwiX25hbWUiLCJuYW1lIiwiX2xpbmsiLCJsaW5rIiwiX2xpa2VzIiwibGlrZXMiLCJfb3duZXJJZCIsIm93bmVyIiwiX2lkIiwiX3RlbXBsYXRlIiwiX29uSW1hZ2VDbGljayIsIl9oYW5kbGVEZWxldGVDYXJkIiwiX2xpa2UiLCJfdXNlcklkIiwiX2lzTGlrZWQiLCJfZWxlbWVudCIsIm5ld0xpa2VzIiwibGVuZ3RoIiwidGV4dCIsIl9oYW5kbGVJbWFnZSIsImNsb25lTm9kZSIsInNyYyIsImFsdCIsInN0eWxlIiwiZGlzcGxheSIsImlzTGlrZWQiLCJfYWRkRXZlbnRMaXN0ZW5lcnMiLCJwZXJzb24iLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJldnQiLCJrZXkiLCJjbG9zZSIsIl9wb3B1cCIsImRvY3VtZW50IiwiX3N1Ym1pdEJ1dHRvbiIsIl9vdmVybGF5IiwiYmluZCIsIl9oYW5kbGVFc2NhcGVDbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJ0YXJnZXQiLCJjb250YWlucyIsInBhcmVudEVsZW1lbnQiLCJfc3VibWl0QnV0dG9uRGVmYXVsdCIsIlBvcHVwV2l0aEltYWdlIiwiX2ltYWdlRWxlbWVudCIsIl9pbWFnZUNhcHRpb24iLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlU3VibWl0Rm9ybSIsIl9zdWJtaXRIYW5kbGVyIiwiX2Zvcm0iLCJfaW5wdXRzIiwiX2lucHV0VmFsdWVzIiwiaW5wdXQiLCJ2YWx1ZSIsIl9nZXRJbnB1dFZhbHVlcyIsInJlc2V0IiwiU2VjdGlvbiIsImNsYXNzU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsImVsZW1lbnQiLCJwcmVwZW5kIiwiUG9wdXBXaXRoU3VibWl0IiwiYWN0aW9uIiwiVXNlckluZm8iLCJqb2IiLCJfam9iIiwidGl0bGUiLCJhYm91dCIsImN1c3RvbUZldGNoIiwidXJsIiwiaGVhZGVycyIsImZldGNoIiwidGhlbiIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXNUZXh0IiwiY2F0Y2giLCJjb25zb2xlIiwibG9nIiwiYXBpIiwiQXBpIiwiYmFzZVVybCIsIl9iYXNlVXJsIiwiX2hlYWRlcnMiLCJkYXRhIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJjYXJkSWQiLCJhdXRob3JpemF0aW9uIiwiYWxsIiwiZ2V0SW5pdGlhbENhcmRzIiwiZ2V0VXNlckluZm8iLCJjYXJkcyIsInVzZXJJbmZvIiwiY3JlYXRlQ2FyZCIsInVzZXJEYXRhIiwic2V0VXNlckluZm8iLCJlcnIiLCJtb2RhbEVkaXRCdXR0b24iLCJtb2RhbFByb2ZpbGVFZGl0QnV0dG9uIiwibW9kYWxBZGRCdXR0b24iLCJtb2RhbEFkZEVsZW1lbnQiLCJtb2RhbEVkaXRFbGVtZW50IiwibW9kYWxQcm9maWxlRWxlbWVudCIsInByb2ZpbGVOYW1lIiwicHJvZmlsZUFib3V0TWUiLCJlbGVtZW50VGVtcGxhdGUiLCJjb250ZW50IiwibW9kYWxJbWFnZSIsInNldEV2ZW50TGlzdGVuZXJzIiwibW9kYWxBZGQiLCJsb2FkaW5nIiwiaW1hZ2VsaW5rIiwibG9hZGVkIiwibW9kYWxFZGl0IiwibW9kYWxDb25maXJtIiwibW9kYWxQcm9maWxlRWRpdCIsInVwZGF0ZVByb2ZpbGUiLCJhdmF0YXIiLCJwcm9maWxlbGluayIsImluaXRpYWxDYXJkc1JlbmRlciIsIm9wZW4iLCJlZGl0Q2FyZFZhbGlkYXRvciIsInJlc2V0VmFsaWRhdGlvbiIsImFkZENhcmRWYWxpZGF0b3IiLCJwcm9maWxlQ2FyZFZhbGlkYXRvciIsImVuYWJsZVZhbGlkYXRpb24iLCJjYXJkIiwic2V0QWN0aW9uIiwiZGVsZXRlQ2FyZCIsInJlbW92ZUNhcmQiLCJyZW1vdmVMaWtlIiwiZGlzbGlrZUNhcmQiLCJsaWtlQ2FyZCIsImFkZEl0ZW0iLCJyZW5kZXIiXSwic291cmNlUm9vdCI6IiJ9