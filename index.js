!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}var n,r;return n=t,(r=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}},{key:"_toggleButtonState",value:function(e,t){e.some((function(e){return!e.validity.valid}))?(t.classList.add(this._inactiveButtonClass),t.disabled=!0):(t.classList.remove(this._inactiveButtonClass),t.disabled=!1)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e,e.validationMessage):this._showInputError(e,e.validationMessage)}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState(e._inputList,e._buttonElement)}))}))}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(this._inputList,this._buttonElement),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&e(n.prototype,r),t}(),n={inputSelector:".modal__input",submitButtonSelector:".modal__save",inactiveButtonClass:"modal__save_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._template=n,this._onImageClick=r}var t,n;return t=e,(n=[{key:"_like",value:function(e){e.target.classList.toggle("element__like-button_active")}},{key:"_handleDelete",value:function(e){e.target.closest(".element").remove()}},{key:"_handleImage",value:function(){this._onImageClick({link:this._link,text:this._name})}},{key:"_addEventListeners",value:function(){var e=this;this._element.querySelector(".element__like-button").addEventListener("click",(function(t){return e._like(t)})),this._element.querySelector(".element__delete-button").addEventListener("click",(function(t){return e._handleDelete(t)})),this._element.querySelector(".element__image-button").addEventListener("click",(function(){return e._handleImage(e._element)}))}},{key:"render",value:function(){return this._element=this._template.cloneNode(!0),this._element.querySelector(".element__image").src=this._link,this._element.querySelector(".element__image").alt="Image of ".concat(this._link),this._element.querySelector(".element__title").textContent=this._name,this._addEventListeners(),this._element}}])&&r(t.prototype,n),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscapeClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(t),this._overlay=document.querySelector(".page__overlay"),this.close.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){document.addEventListener("keyup",this._handleEscapeClose),this._popup.classList.add("modal_opened"),this._overlay.classList.remove("page__overlay_disabled")}},{key:"close",value:function(){document.removeEventListener("keyup",this._handleEscapeClose),this._popup.classList.remove("modal_opened"),this._overlay.classList.add("page__overlay_disabled")}},{key:"setEventListeners",value:function(){var e=this;document.addEventListener("click",(function(t){(t.target.classList.contains("page__wrapper")||t.target.classList.contains("page")||t.target.parentElement.classList.contains("modal__close"))&&e.close()}))}}])&&i(t.prototype,n),e}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function u(e,t){return u=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},u(e,t)}function s(e,t){if(t&&("object"===l(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return c(e)}function c(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=p(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}function d(e){return d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},d(e)}var m=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&u(e,t)}(o,e);var t,n,r=(t=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=d(t);if(n){var o=d(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return s(this,e)});function o(e){var t,n,i,a,l;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),l=function(e){var r=e.link,i=e.text;n._imageElement.src=r,n._imageElement.alt="Image of ".concat(r),n._imageCaption.textContent=i,f((t=c(n),d(o.prototype)),"open",t).call(t)},(a="open")in(i=c(n=r.call(this,e)))?Object.defineProperty(i,a,{value:l,enumerable:!0,configurable:!0,writable:!0}):i.open=l,n._imageElement=n._popup.querySelector(".modal__image"),n._imageCaption=n._popup.querySelector(".modal__footer"),n}return o}(a);function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function _(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=b(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},v.apply(this,arguments)}function b(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}function g(e,t){return g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},g(e,t)}function k(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&g(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return k(this,e)});function a(e,t){var n,r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._submitHandler=t,n._form=n._popup.querySelector(".modal__form"),n._inputs=function(e){if(Array.isArray(e))return _(e)}(r=n._form.querySelectorAll(".modal__input"))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(r)||function(e,t){if(e){if("string"==typeof e)return _(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_(e,t):void 0}}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n._inputValues={},n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputs.forEach((function(t){e._inputValues[t.name]=t.value})),this._inputValues}},{key:"setEventListeners",value:function(){var e=this;v(E(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(){return e._submitHandler(e._getInputValues())}))}},{key:"close",value:function(){v(E(a.prototype),"close",this).call(this),this._form.reset()}}])&&h(t.prototype,n),a}(a);function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var L=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){e._element=e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&S(t.prototype,n),e}();function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var C=function(){function e(t){var n=t.name,r=t.job;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._job=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,job:this._job.textContent}}},{key:"setUserInfo",value:function(e){var t=e.title,n=e.about;this._name.textContent=t,this._job.textContent=n}}])&&j(t.prototype,n),e}();function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}new(function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{header:this._headers}).then((function(e){return e.ok?e.json():Promise.reject(e.statusText)})).catch(console.log)}}])&&O(t.prototype,n),e}())({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"09713568-a286-49a7-9198-7879f35fb73d","Content-Type":"application/json"}}).getInitialCards();var I=document.querySelector(".profile__edit-button"),P=document.querySelector(".profile__add-button"),q=document.querySelector(".modal_type_add-card"),x=document.querySelector(".modal_type_edit-card"),B=document.querySelector("#title"),R=document.querySelector("#about"),V=document.querySelector("#element").content,T=new m(".modal_type_image-card");T.setEventListeners();var A=new w(".modal_type_add-card",(function(e){var t={name:"",link:"",alt:""};t.name=e.title,t.link=e["image-link"],t.alt="Photo of ".concat(e["image-link"]),Y(t),A.close()}));A.setEventListeners();var U=new w(".modal_type_edit-card",(function(e){D.setUserInfo(e),U.close()}));U.setEventListeners();var D=new C({name:".profile__name",job:".profile__about-me"}),M=new L({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg",alt:"Yosemite Valley"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg",alt:"Lake Louise"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg",alt:"Bald Mountains"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg",alt:"Latemar"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg",alt:"Vanoise National Park"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg",alt:"Lago di Braies"}],renderer:function(e){Y(e)}},".elements");M.renderItems(),I.addEventListener("click",(function(){var e=D.getUserInfo();B.value=e.name,R.value=e.job,U.open(),N.resetValidation()})),P.addEventListener("click",(function(){A.open(),H.resetValidation()}));var N=new t(n,x);N.enableValidation();var H=new t(n,q);function Y(e){var t=new o(e,V,T.open);M.addItem(t.render())}H.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEtBQU0sK0NBQ05jLElBQU0sbUJRZm1EOEIsU0FBVSxTQUFDSSxHQUNwRXVDLEVBQVd2QyxLQUNYLGFBQ0oyQyxFQUFtQkMsY0FJbkJsQixFQUFnQnhGLGlCQUFpQixTQUFTLFdBQ3RDLElBQU1tRyxFQUFPSSxFQUFTSSxjQUN0QmYsRUFBWXhDLE1BQVErQyxFQUFLdkYsS0FDekJpRixFQUFlekMsTUFBUStDLEVBQUtsQyxJQUM1QnFDLEVBQVVNLE9BQ1ZDLEVBQWtCQyxxQkFHdEJyQixFQUFlekYsaUJBQWlCLFNBQVMsV0FDckNrRyxFQUFTVSxPQUNURyxFQUFpQkQscUJBSXJCLElBQU1ELEVBQW9CLElBQUluSixFQUFjNEMsRUFBY3FGLEdBQzFEa0IsRUFBa0JHLG1CQUNsQixJQUFNRCxFQUFtQixJQUFJckosRUFBYzRDLEVBQWNvRixHQUd6RCxTQUFTVyxFQUFXWSxHQUNoQixJQUFNQyxFQUFPLElBQUkzRyxFQUFLMEcsRUFBY25CLEVBQWlCRSxFQUFXWSxNQUNoRUgsRUFBbUJVLFFBQVFELEVBQUtFLFVBSnBDTCxFQUFpQkMsbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcmFjdGljdW0tcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLXByb2plY3QvLi9zcmMvdXRpbHMvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLXByb2plY3QvLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS1wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLXByb2plY3QvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0tcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLXByb2plY3QvLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS1wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLXByb2plY3QvLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLXByb2plY3QvLi9zcmMvcGFnZS9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICAgIGNvbnN0cnVjdG9yKHNldHRpbmdzLCBmb3JtRWxlbWVudCl7XHJcbiAgICAgICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IHNldHRpbmdzLmlucHV0U2VsZWN0b3I7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBzZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcclxuICAgICAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgICAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBzZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICAgICAgdGhpcy5fZXJyb3JDbGFzcyA9IHNldHRpbmdzLmVycm9yQ2xhc3M7XHJcbiAgICAgICAgdGhpcy5fZm9ybUVsZW1lbnQgPSBmb3JtRWxlbWVudDtcclxuICAgICAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvcikpO1xyXG4gICAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuICAgIH1cclxuICAgIF9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIHZhbGlkYXRpb25NZXNzYWdlKSB7XHJcbiAgICAgICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICAgICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gdmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICAgICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgICB9XHJcbiAgICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcbiAgICAgICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICAgICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcclxuICAgICAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcclxuICAgIH1cclxuICAgIF90b2dnbGVCdXR0b25TdGF0ZShpbnB1dEVsZW1lbnRzLCBidXR0b25FbGVtZW50KXtcclxuICAgICAgICBjb25zdCBoYXNJbnZhbGlkSW5wdXQgPSBpbnB1dEVsZW1lbnRzLnNvbWUoaW5wdXRFbGVtZW50ID0+ICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpO1xyXG4gICAgICAgIGlmIChoYXNJbnZhbGlkSW5wdXQpe1xyXG4gICAgICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgICBidXR0b25FbGVtZW50LmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgICBidXR0b25FbGVtZW50LmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpe1xyXG4gICAgICAgIGlmKGlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCl7XHJcbiAgICAgICAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlKTtcclxuICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2UpO1xyXG4gICAgICAgICB9ICBcclxuICAgIH1cclxuICAgIF9zZXRFdmVudExpc3RlbmVycygpe1xyXG4gICAgICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKGlucHV0RWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUodGhpcy5faW5wdXRMaXN0LCB0aGlzLl9idXR0b25FbGVtZW50KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICByZXNldFZhbGlkYXRpb24oKSB7XHJcbiAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKHRoaXMuX2lucHV0TGlzdCx0aGlzLl9idXR0b25FbGVtZW50KTsgXHJcbiAgICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSBcclxuICAgICAgfSk7XHJcblxyXG4gICAgfVxyXG4gICAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgICAgICB0aGlzLl9mb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBlID0+IHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEZvcm1WYWxpZGF0b3I7IiwiZXhwb3J0IGZ1bmN0aW9uIGNsb3NlQnlFc2NhcGUoZXZ0KXtcclxuICAgIGlmKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpe1xyXG4gICAgICAgIGNvbnN0IG9wZW5lZFBvcHVwICA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbF9vcGVuZWQnKTtcclxuICAgICAgICBjbG9zZU1vZGFsKG9wZW5lZFBvcHVwKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGZvcm1TZXR0aW5ncyA9IHtcclxuICAgIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxyXG4gICAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19zYXZlXCIsXHJcbiAgICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19zYXZlX2Rpc2FibGVkXCIsXHJcbiAgICBpbnB1dEVycm9yQ2xhc3M6IFwibW9kYWxfX2lucHV0X3R5cGVfZXJyb3JcIixcclxuICAgIGVycm9yQ2xhc3M6IFwibW9kYWxfX2Vycm9yX3Zpc2libGVcIlxyXG4gIH1cclxuXHJcbmZ1bmN0aW9uIGNsaWNrQ2xvc2UoZXZ0KSB7XHJcbiAgICBjb25zdCBwYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBhZ2UnKTtcclxuICAgIGNvbnN0IHBhZ2VXcmFwcGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBhZ2VfX3dyYXBwZXInKTtcclxuICAgIGlmICgoZXZ0LnRhcmdldCA9PT0gcGFnZSl8fChldnQudGFyZ2V0ID09PSBwYWdlV3JhcHBlcikpIHtcclxuICAgICAgY29uc3Qgb3BlbmVkUG9wdXAgID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsX29wZW5lZCcpO1xyXG4gICAgICBjbG9zZU1vZGFsKG9wZW5lZFBvcHVwKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG9wZW5Nb2RhbChtb2RhbFdpbmRvdykge1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCBjbG9zZUJ5RXNjYXBlKTtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY2xpY2tDbG9zZSk7XHJcbiAgICBtb2RhbFdpbmRvdy5jbGFzc0xpc3QuYWRkKGBtb2RhbF9vcGVuZWRgKTtcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wYWdlX19vdmVybGF5JykuY2xhc3NMaXN0LnJlbW92ZSgncGFnZV9fb3ZlcmxheV9kaXNhYmxlZCcpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY2xvc2VNb2RhbChtb2RhbFdpbmRvdykge1xyXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5dXAnICwgY2xvc2VCeUVzY2FwZSk7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycgLCBjbGlja0Nsb3NlKTtcclxuICAgIG1vZGFsV2luZG93LmNsYXNzTGlzdC5yZW1vdmUoYG1vZGFsX29wZW5lZGApO1xyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBhZ2VfX292ZXJsYXknKS5jbGFzc0xpc3QuYWRkKCdwYWdlX19vdmVybGF5X2Rpc2FibGVkJyk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBpbml0aWFsQ2FyZHMgPSBbe1xyXG4gICAgbmFtZTogXCJZb3NlbWl0ZSBWYWxsZXlcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUveW9zZW1pdGUuanBnXCIsXHJcbiAgICBhbHQ6ICBcIllvc2VtaXRlIFZhbGxleVwiXHJcbn0sXHJcbntcclxuICAgIG5hbWU6IFwiTGFrZSBMb3Vpc2VcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGFrZS1sb3Vpc2UuanBnXCIsXHJcbiAgICBhbHQ6ICBcIkxha2UgTG91aXNlXCJcclxufSxcclxue1xyXG4gICAgbmFtZTogXCJCYWxkIE1vdW50YWluc1wiLFxyXG4gICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS9iYWxkLW1vdW50YWlucy5qcGdcIixcclxuICAgIGFsdDogIFwiQmFsZCBNb3VudGFpbnNcIlxyXG59LFxyXG57XHJcbiAgICBuYW1lOiBcIkxhdGVtYXJcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGF0ZW1hci5qcGdcIixcclxuICAgIGFsdDogIFwiTGF0ZW1hclwiXHJcbn0sXHJcbntcclxuICAgIG5hbWU6IFwiVmFub2lzZSBOYXRpb25hbCBQYXJrXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL3Zhbm9pc2UuanBnXCIsXHJcbiAgICBhbHQ6ICBcIlZhbm9pc2UgTmF0aW9uYWwgUGFya1wiXHJcbn0sXHJcbntcclxuICAgIG5hbWU6IFwiTGFnbyBkaSBCcmFpZXNcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGFnby5qcGdcIixcclxuICAgIGFsdDogIFwiTGFnbyBkaSBCcmFpZXNcIlxyXG59XHJcbl07IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgICBjb25zdHJ1Y3RvcihjYXJkRGF0YSwgY2FyZFRlbXBsYXRlU2VsZWN0b3IsIG9uSW1hZ2VDbGljaykge1xyXG4gICAgICAgIHRoaXMuX25hbWUgPSBjYXJkRGF0YS5uYW1lO1xyXG4gICAgICAgIHRoaXMuX2xpbmsgPSBjYXJkRGF0YS5saW5rO1xyXG4gICAgICAgIHRoaXMuX3RlbXBsYXRlID0gY2FyZFRlbXBsYXRlU2VsZWN0b3I7XHJcbiAgICAgICAgdGhpcy5fb25JbWFnZUNsaWNrID0gb25JbWFnZUNsaWNrO1xyXG4gICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICBfbGlrZShldnQpIHtcclxuICAgICAgICAgICAgY29uc3QgZXZlbnRUYXJnZXQgPSBldnQudGFyZ2V0O1xyXG4gICAgICAgICAgICBldmVudFRhcmdldC5jbGFzc0xpc3QudG9nZ2xlKGBlbGVtZW50X19saWtlLWJ1dHRvbl9hY3RpdmVgKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgX2hhbmRsZURlbGV0ZShldnQpIHtcclxuICAgICAgICAgICAgZXZ0LnRhcmdldC5jbG9zZXN0KGAuZWxlbWVudGApLnJlbW92ZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBfaGFuZGxlSW1hZ2UoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX29uSW1hZ2VDbGljayh7bGluazogdGhpcy5fbGluaywgdGV4dDogdGhpcy5fbmFtZX0pXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBfYWRkRXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2xpa2UtYnV0dG9uJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZ0KSA9PiB0aGlzLl9saWtlKGV2dCkpO1xyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19kZWxldGUtYnV0dG9uJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLChldnQpID0+IHRoaXMuX2hhbmRsZURlbGV0ZShldnQpKTtcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9faW1hZ2UtYnV0dG9uJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLl9oYW5kbGVJbWFnZSh0aGlzLl9lbGVtZW50KSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZW5kZXIoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl90ZW1wbGF0ZS5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2ltYWdlJykuc3JjID0gdGhpcy5fbGluaztcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9faW1hZ2UnKS5hbHQgPSBgSW1hZ2Ugb2YgJHt0aGlzLl9saW5rfWA7XHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX3RpdGxlJykudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lOyAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHRoaXMuX2FkZEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcclxuICAgICAgICB9XHJcbiAgICB9IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9vdmVybGF5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLnBhZ2VfX292ZXJsYXlgKTtcclxuICAgICAgICB0aGlzLmNsb3NlLmJpbmQodGhpcyk7XHJcbiAgICB9XHJcbiAgICBvcGVuKCl7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB0aGlzLl9oYW5kbGVFc2NhcGVDbG9zZSk7XHJcbiAgICAgICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZChgbW9kYWxfb3BlbmVkYCk7XHJcbiAgICAgICAgdGhpcy5fb3ZlcmxheS5jbGFzc0xpc3QucmVtb3ZlKCdwYWdlX19vdmVybGF5X2Rpc2FibGVkJyk7XHJcbiAgICB9XHJcbiAgICBjbG9zZSgpe1xyXG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleXVwJywgdGhpcy5faGFuZGxlRXNjYXBlQ2xvc2UpO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoYG1vZGFsX29wZW5lZGApO1xyXG4gICAgICAgIHRoaXMuX292ZXJsYXkuY2xhc3NMaXN0LmFkZCgncGFnZV9fb3ZlcmxheV9kaXNhYmxlZCcpO1xyXG4gICAgfVxyXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKXtcclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldnQpID0+IHtcclxuICAgICAgICAgICAgaWYoZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoYHBhZ2VfX3dyYXBwZXJgKSB8fCBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhgcGFnZWApIHx8IGV2dC50YXJnZXQucGFyZW50RWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ21vZGFsX19jbG9zZScpKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pOyBcclxuICAgIH1cclxuICAgIF9oYW5kbGVFc2NhcGVDbG9zZSA9IChldnQpID0+IHtcclxuICAgICAgICBpZihldnQua2V5ID09PSBcIkVzY2FwZVwiKXtcclxuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgICAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9pbWFnZUVsZW1lbnQgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX2ltYWdlJyk7XHJcbiAgICAgICAgdGhpcy5faW1hZ2VDYXB0aW9uID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLm1vZGFsX19mb290ZXInKTtcclxuICAgIH1cclxuICAgIG9wZW4gPSAoeyBsaW5rLCB0ZXh0IH0pID0+IHtcclxuICAgICAgICB0aGlzLl9pbWFnZUVsZW1lbnQuc3JjID0gbGluaztcclxuICAgICAgICB0aGlzLl9pbWFnZUVsZW1lbnQuYWx0ID0gYEltYWdlIG9mICR7bGlua31gO1xyXG4gICAgICAgIHRoaXMuX2ltYWdlQ2FwdGlvbi50ZXh0Q29udGVudCA9IHRleHQ7XHJcbiAgICAgICAgc3VwZXIub3BlbigpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVTdWJtaXRGb3JtKSB7XHJcbiAgICAgICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0SGFuZGxlciA9IGhhbmRsZVN1Ym1pdEZvcm07XHJcbiAgICAgICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbF9fZm9ybScpO1xyXG4gICAgICAgIHRoaXMuX2lucHV0cyA9IFsuLi50aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoJy5tb2RhbF9faW5wdXQnKV07XHJcbiAgICAgICAgdGhpcy5faW5wdXRWYWx1ZXMgPSB7fTtcclxuICAgIH1cclxuICAgIF9nZXRJbnB1dFZhbHVlcygpe1xyXG4gICAgICAgIHRoaXMuX2lucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9pbnB1dFZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lucHV0VmFsdWVzO1xyXG4gICAgfVxyXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKXtcclxuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKCkgPT4gdGhpcy5fc3VibWl0SGFuZGxlcih0aGlzLl9nZXRJbnB1dFZhbHVlcygpKSk7XHJcbiAgICB9XHJcbiAgICBjbG9zZSgpe1xyXG4gICAgICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICAgICAgdGhpcy5fZm9ybS5yZXNldCgpO1xyXG4gICAgfVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9ICwgY2xhc3NTZWxlY3Rvcikge1xyXG4gICAgICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XHJcbiAgICAgICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcclxuICAgICAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNsYXNzU2VsZWN0b3IpO1xyXG4gICAgfVxyXG4gICAgcmVuZGVySXRlbXMoKXtcclxuICAgICAgICB0aGlzLl9pdGVtcy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fcmVuZGVyZXIoZWxlbWVudCk7XHJcbiAgICAgICAgfSkgIFxyXG4gICAgfVxyXG4gICAgYWRkSXRlbSAoZWxlbWVudCl7XHJcbiAgICAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcclxuICAgIH1cclxuXHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7IG5hbWUsIGpvYiB9KXtcclxuICAgICAgICB0aGlzLl9uYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lKTtcclxuICAgICAgICB0aGlzLl9qb2IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGpvYik7XHJcbiAgICB9XHJcbiAgICBnZXRVc2VySW5mbygpe1xyXG4gICAgICAgIHJldHVybiB7IFxyXG4gICAgICAgICAgICBuYW1lOiB0aGlzLl9uYW1lLnRleHRDb250ZW50LFxyXG4gICAgICAgICAgICBqb2I6IHRoaXMuX2pvYi50ZXh0Q29udGVudFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHNldFVzZXJJbmZvKHsgdGl0bGUsIGFib3V0IH0pe1xyXG4gICAgICAgIHRoaXMuX25hbWUudGV4dENvbnRlbnQgPSB0aXRsZTtcclxuICAgICAgICB0aGlzLl9qb2IudGV4dENvbnRlbnQgPSBhYm91dDtcclxuICAgIH1cclxufSIsImNsYXNzIEFwaXtcclxuICAgIGNvbnN0cnVjdG9yKHtiYXNlVXJsLCBoZWFkZXJzfSkge1xyXG4gICAgICAgIHRoaXMuX2Jhc2VVcmwgPSBiYXNlVXJsO1xyXG4gICAgICAgIHRoaXMuX2hlYWRlcnMgPSBoZWFkZXJzO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEluaXRpYWxDYXJkcygpe1xyXG4gICAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgICAgICAgaGVhZGVyOiB0aGlzLl9oZWFkZXJzXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4ocmVzID0+IHJlcy5vayA/IHJlcy5qc29uKCkgOiBQcm9taXNlLnJlamVjdChyZXMuc3RhdHVzVGV4dCkpXHJcbiAgICAgICAgLmNhdGNoKGNvbnNvbGUubG9nKVxyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBjb25zdCBhcGkgPSBuZXcgQXBpKHtcclxuICAgIGJhc2VVcmw6IFwiaHR0cHM6Ly9hcm91bmQubm9tb3JlcGFydGllcy5jby92MS9ncm91cC0xMlwiLFxyXG4gICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IFwiMDk3MTM1NjgtYTI4Ni00OWE3LTkxOTgtNzg3OWYzNWZiNzNkXCIsXHJcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcclxuICAgIH1cclxufSk7IiwiaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xyXG5pbXBvcnQgeyBpbml0aWFsQ2FyZHMsIGZvcm1TZXR0aW5nc30gZnJvbSBcIi4uL3V0aWxzL3V0aWxzLmpzXCI7XHJcbmltcG9ydCBDYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL0NhcmQuanNcIjtcclxuaW1wb3J0IFBvcHVwIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XHJcbmltcG9ydCB7IGFwaSB9IGZyb20gXCIuLi9jb21wb25lbnRzL0FwaS5qc1wiO1xyXG5cclxuYXBpLmdldEluaXRpYWxDYXJkcygpO1xyXG5cclxuXHJcbmNvbnN0IG1vZGFsRWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5wcm9maWxlX19lZGl0LWJ1dHRvbmApO1xyXG5jb25zdCBtb2RhbEFkZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5wcm9maWxlX19hZGQtYnV0dG9uYCk7XHJcbmNvbnN0IG1vZGFsQWRkRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5tb2RhbF90eXBlX2FkZC1jYXJkYCk7XHJcbmNvbnN0IG1vZGFsRWRpdEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAubW9kYWxfdHlwZV9lZGl0LWNhcmRgKTtcclxuY29uc3QgcHJvZmlsZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjdGl0bGVgKTtcclxuY29uc3QgcHJvZmlsZUFib3V0TWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjYWJvdXRgKTtcclxuY29uc3QgZWxlbWVudFRlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI2VsZW1lbnRgKS5jb250ZW50O1xyXG5cclxuXHJcbmNvbnN0IG1vZGFsSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoJy5tb2RhbF90eXBlX2ltYWdlLWNhcmQnKTtcclxubW9kYWxJbWFnZS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgbW9kYWxBZGQgPSBuZXcgUG9wdXBXaXRoRm9ybShgLm1vZGFsX3R5cGVfYWRkLWNhcmRgLCAoZGF0YSkgPT4ge1xyXG4gICAgY29uc3QgaW5pdGlhbENhcmRzVXBkYXRlZCA9IHtcclxuICAgICAgICBuYW1lOiBcIlwiLFxyXG4gICAgICAgIGxpbms6IFwiXCIsXHJcbiAgICAgICAgYWx0OiBcIlwiXHJcbiAgICB9O1xyXG4gICAgaW5pdGlhbENhcmRzVXBkYXRlZC5uYW1lID0gZGF0YS50aXRsZTtcclxuICAgIGluaXRpYWxDYXJkc1VwZGF0ZWQubGluayA9IGRhdGFbJ2ltYWdlLWxpbmsnXTtcclxuICAgIGluaXRpYWxDYXJkc1VwZGF0ZWQuYWx0ID0gYFBob3RvIG9mICR7ZGF0YVsnaW1hZ2UtbGluayddfWA7XHJcbiAgICBjcmVhdGVDYXJkKGluaXRpYWxDYXJkc1VwZGF0ZWQpO1xyXG4gICAgbW9kYWxBZGQuY2xvc2UoKTtcclxufSk7XHJcbm1vZGFsQWRkLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5jb25zdCBtb2RhbEVkaXQgPSBuZXcgUG9wdXBXaXRoRm9ybShgLm1vZGFsX3R5cGVfZWRpdC1jYXJkYCwgKGRhdGEpID0+IHtcclxuICAgIHVzZXJEYXRhLnNldFVzZXJJbmZvKGRhdGEpO1xyXG4gICAgbW9kYWxFZGl0LmNsb3NlKCk7XHJcbn0pO1xyXG5cclxubW9kYWxFZGl0LnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5jb25zdCB1c2VyRGF0YSA9IG5ldyBVc2VySW5mbyh7XHJcbiAgICBuYW1lOiAnLnByb2ZpbGVfX25hbWUnLCBqb2I6ICcucHJvZmlsZV9fYWJvdXQtbWUnXHJcbn0pO1xyXG5cclxuY29uc3QgaW5pdGlhbENhcmRzUmVuZGVyID0gbmV3IFNlY3Rpb24oe2l0ZW1zOiBpbml0aWFsQ2FyZHMsIHJlbmRlcmVyOiAoZWxlbWVudCk9PntcclxuICAgIGNyZWF0ZUNhcmQoZWxlbWVudCk7XHJcbn19LCBcIi5lbGVtZW50c1wiKTtcclxuaW5pdGlhbENhcmRzUmVuZGVyLnJlbmRlckl0ZW1zKCk7XHJcblxyXG5cclxuXHJcbm1vZGFsRWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgIGNvbnN0IGRhdGEgPSB1c2VyRGF0YS5nZXRVc2VySW5mbygpO1xyXG4gICAgcHJvZmlsZU5hbWUudmFsdWUgPSBkYXRhLm5hbWU7XHJcbiAgICBwcm9maWxlQWJvdXRNZS52YWx1ZSA9IGRhdGEuam9iO1xyXG4gICAgbW9kYWxFZGl0Lm9wZW4oKTtcclxuICAgIGVkaXRDYXJkVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xyXG4gIH0pO1xyXG5cclxubW9kYWxBZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PntcclxuICAgIG1vZGFsQWRkLm9wZW4oKTtcclxuICAgIGFkZENhcmRWYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XHJcbn0pO1xyXG5cclxuXHJcbmNvbnN0IGVkaXRDYXJkVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoZm9ybVNldHRpbmdzLCBtb2RhbEVkaXRFbGVtZW50KTtcclxuZWRpdENhcmRWYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5jb25zdCBhZGRDYXJkVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoZm9ybVNldHRpbmdzLCBtb2RhbEFkZEVsZW1lbnQpO1xyXG5hZGRDYXJkVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUNhcmQoSW5pdGlhbENhcmRzKSB7XHJcbiAgICBjb25zdCBjYXJkID0gbmV3IENhcmQoSW5pdGlhbENhcmRzLCBlbGVtZW50VGVtcGxhdGUsIG1vZGFsSW1hZ2Uub3BlbilcclxuICAgIGluaXRpYWxDYXJkc1JlbmRlci5hZGRJdGVtKGNhcmQucmVuZGVyKCkpO1xyXG59Il0sIm5hbWVzIjpbIkZvcm1WYWxpZGF0b3IiLCJzZXR0aW5ncyIsImZvcm1FbGVtZW50IiwidGhpcyIsIl9pbnB1dFNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsIl9mb3JtRWxlbWVudCIsIl9pbnB1dExpc3QiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiX2J1dHRvbkVsZW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiaW5wdXRFbGVtZW50IiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJlcnJvckVsZW1lbnQiLCJpZCIsImNsYXNzTGlzdCIsImFkZCIsInRleHRDb250ZW50IiwicmVtb3ZlIiwiaW5wdXRFbGVtZW50cyIsImJ1dHRvbkVsZW1lbnQiLCJzb21lIiwidmFsaWRpdHkiLCJ2YWxpZCIsImRpc2FibGVkIiwiX2hpZGVJbnB1dEVycm9yIiwiX3Nob3dJbnB1dEVycm9yIiwiZm9yRWFjaCIsImFkZEV2ZW50TGlzdGVuZXIiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiZSIsInByZXZlbnREZWZhdWx0IiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiZm9ybVNldHRpbmdzIiwiQ2FyZCIsImNhcmREYXRhIiwiY2FyZFRlbXBsYXRlU2VsZWN0b3IiLCJvbkltYWdlQ2xpY2siLCJfbmFtZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfdGVtcGxhdGUiLCJfb25JbWFnZUNsaWNrIiwiZXZ0IiwidGFyZ2V0IiwidG9nZ2xlIiwiY2xvc2VzdCIsInRleHQiLCJfZWxlbWVudCIsIl9saWtlIiwiX2hhbmRsZURlbGV0ZSIsIl9oYW5kbGVJbWFnZSIsImNsb25lTm9kZSIsInNyYyIsImFsdCIsIl9hZGRFdmVudExpc3RlbmVycyIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsImtleSIsImNsb3NlIiwiX3BvcHVwIiwiZG9jdW1lbnQiLCJfb3ZlcmxheSIsImJpbmQiLCJfaGFuZGxlRXNjYXBlQ2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY29udGFpbnMiLCJwYXJlbnRFbGVtZW50IiwiUG9wdXBXaXRoSW1hZ2UiLCJfaW1hZ2VFbGVtZW50IiwiX2ltYWdlQ2FwdGlvbiIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVTdWJtaXRGb3JtIiwiX3N1Ym1pdEhhbmRsZXIiLCJfZm9ybSIsIl9pbnB1dHMiLCJfaW5wdXRWYWx1ZXMiLCJpbnB1dCIsInZhbHVlIiwiX2dldElucHV0VmFsdWVzIiwicmVzZXQiLCJTZWN0aW9uIiwiY2xhc3NTZWxlY3RvciIsIml0ZW1zIiwicmVuZGVyZXIiLCJfaXRlbXMiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiZWxlbWVudCIsInByZXBlbmQiLCJVc2VySW5mbyIsImpvYiIsIl9qb2IiLCJ0aXRsZSIsImFib3V0IiwiQXBpIiwiYmFzZVVybCIsImhlYWRlcnMiLCJfYmFzZVVybCIsIl9oZWFkZXJzIiwiZmV0Y2giLCJoZWFkZXIiLCJ0aGVuIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1c1RleHQiLCJjYXRjaCIsImNvbnNvbGUiLCJsb2ciLCJhdXRob3JpemF0aW9uIiwiZ2V0SW5pdGlhbENhcmRzIiwibW9kYWxFZGl0QnV0dG9uIiwibW9kYWxBZGRCdXR0b24iLCJtb2RhbEFkZEVsZW1lbnQiLCJtb2RhbEVkaXRFbGVtZW50IiwicHJvZmlsZU5hbWUiLCJwcm9maWxlQWJvdXRNZSIsImVsZW1lbnRUZW1wbGF0ZSIsImNvbnRlbnQiLCJtb2RhbEltYWdlIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJtb2RhbEFkZCIsImRhdGEiLCJpbml0aWFsQ2FyZHNVcGRhdGVkIiwiY3JlYXRlQ2FyZCIsIm1vZGFsRWRpdCIsInVzZXJEYXRhIiwic2V0VXNlckluZm8iLCJpbml0aWFsQ2FyZHNSZW5kZXIiLCJyZW5kZXJJdGVtcyIsImdldFVzZXJJbmZvIiwib3BlbiIsImVkaXRDYXJkVmFsaWRhdG9yIiwicmVzZXRWYWxpZGF0aW9uIiwiYWRkQ2FyZFZhbGlkYXRvciIsImVuYWJsZVZhbGlkYXRpb24iLCJJbml0aWFsQ2FyZHMiLCJjYXJkIiwiYWRkSXRlbSIsInJlbmRlciJdLCJzb3VyY2VSb290IjoiIn0=