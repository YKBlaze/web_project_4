!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}var n,r;return n=t,(r=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}},{key:"_toggleButtonState",value:function(e,t){e.some((function(e){return!e.validity.valid}))?(t.classList.add(this._inactiveButtonClass),t.disabled=!0):(t.classList.remove(this._inactiveButtonClass),t.disabled=!1)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e,e.validationMessage):this._showInputError(e,e.validationMessage)}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState(e._inputList,e._buttonElement)}))}))}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(this._inputList,this._buttonElement),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&e(n.prototype,r),t}(),n={inputSelector:".modal__input",submitButtonSelector:".modal__save",inactiveButtonClass:"modal__save_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n,r,o,i,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._likes=t.likes,this._ownerId=t.owner._id,this._template=n,this._onImageClick=r,this._handleDeleteCard=o,this._like=a,this._id=t._id,this._userId=i,this._isLiked=!1}var t,n;return t=e,(n=[{key:"removeCard",value:function(){this._element.remove(),this._element=null}},{key:"likeCard",value:function(e){this._likes=e,this._element.querySelector(".element__like-count").textContent=this._likes.length,this._element.querySelector(".element__like-button").classList.add("element__like-button_active")}},{key:"dislikeCard",value:function(e){this._likes=e,this._element.querySelector(".element__like-count").textContent=this._likes.length,this._element.querySelector(".element__like-button").classList.remove("element__like-button_active")}},{key:"_handleImage",value:function(){this._onImageClick({link:this._link,text:this._name})}},{key:"_addEventListeners",value:function(){var e=this;this._element.querySelector(".element__like-button").addEventListener("click",(function(){return e._like(e._id)})),this._element.querySelector(".element__delete-button").addEventListener("click",(function(){return e._handleDeleteCard(e._id)})),this._element.querySelector(".element__image-button").addEventListener("click",(function(){return e._handleImage(e._element)}))}},{key:"render",value:function(){return this._element=this._template.cloneNode(!0),this._element=this._element.querySelector(".element"),this._element.querySelector(".element__image").src=this._link,this._element.querySelector(".element__image").alt="Image of ".concat(this._link),this._element.querySelector(".element__title").textContent=this._name,this._ownerId!==this._userId&&(this._element.querySelector(".element__delete-button").style.display="none"),this._element.querySelector(".element__like-count").textContent=this._likes.length,this.isLiked()&&this._element.querySelector(".element__like-button").classList.add("element__like-button_active"),this._addEventListeners(),this._element}},{key:"isLiked",value:function(){var e=this;return this._isLiked=this._likes.some((function(t){return t._id===e._userId})),this._isLiked}}])&&r(t.prototype,n),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscapeClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(t),this._submitButton=this._popup.querySelector(".modal__save"),this._overlay=document.querySelector(".page__overlay"),this.close.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){document.addEventListener("keyup",this._handleEscapeClose),this._popup.classList.add("modal_opened"),this._overlay.classList.remove("page__overlay_disabled")}},{key:"close",value:function(){document.removeEventListener("keyup",this._handleEscapeClose),this._popup.classList.remove("modal_opened"),this._overlay.classList.add("page__overlay_disabled")}},{key:"setEventListeners",value:function(){var e=this;document.addEventListener("click",(function(t){(t.target.classList.contains("page__wrapper")||t.target.classList.contains("page")||t.target.parentElement.classList.contains("modal__close"))&&e.close()}))}},{key:"loading",value:function(){this._submitButton.textContent="Checking..."}},{key:"loaded",value:function(){this._submitButton.textContent="".concat(this._submitButtonDefault)}}])&&i(t.prototype,n),e}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function u(e,t){return u=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},u(e,t)}function s(e,t){if(t&&("object"===l(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return c(e)}function c(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=d(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function d(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}function h(e){return h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},h(e)}var p=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&u(e,t)}(o,e);var t,n,r=(t=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=h(t);if(n){var o=h(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return s(this,e)});function o(e){var t,n,i,a,l;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),l=function(e){var r=e.link,i=e.text;n._imageElement.src=r,n._imageElement.alt="Image of ".concat(r),n._imageCaption.textContent=i,f((t=c(n),h(o.prototype)),"open",t).call(t)},(a="open")in(i=c(n=r.call(this,e)))?Object.defineProperty(i,a,{value:l,enumerable:!0,configurable:!0,writable:!0}):i.open=l,n._imageElement=n._popup.querySelector(".modal__image"),n._imageCaption=n._popup.querySelector(".modal__footer"),n}return o}(a);function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function _(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=b(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},v.apply(this,arguments)}function b(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}function g(e,t){return g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},g(e,t)}function k(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&g(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return k(this,e)});function a(e,t){var n,r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._submitHandler=t,n._form=n._popup.querySelector(".modal__form"),n._inputs=function(e){if(Array.isArray(e))return _(e)}(r=n._form.querySelectorAll(".modal__input"))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(r)||function(e,t){if(e){if("string"==typeof e)return _(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_(e,t):void 0}}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n._inputValues={},n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputs.forEach((function(t){e._inputValues[t.name]=t.value})),this._inputValues}},{key:"setEventListeners",value:function(){var e=this;v(w(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(){return e._submitHandler(e._getInputValues())}))}},{key:"open",value:function(){v(w(a.prototype),"open",this).call(this),this._submitButtonDefault=this._submitButton.textContent}},{key:"close",value:function(){v(w(a.prototype),"close",this).call(this),this._form.reset()}}])&&m(t.prototype,n),a}(a);function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var C=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){e._element=e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&S(t.prototype,n),e}();function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=P(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},j.apply(this,arguments)}function P(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}function I(e,t){return I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},I(e,t)}function q(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function x(e){return x=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},x(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&I(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(r);if(o){var n=x(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return q(this,e)});function a(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),i.call(this,e)}return t=a,(n=[{key:"setAction",value:function(e){this._submitHandler=e}},{key:"setEventListeners",value:function(){var e=this;j(x(a.prototype),"setEventListeners",this).call(this),this._popup.addEventListener("submit",(function(t){t.preventDefault(),e._submitHandler()}))}},{key:"open",value:function(){j(x(a.prototype),"open",this).call(this),this._submitButtonDefault=this._submitButton.textContent}}])&&O(t.prototype,n),a}(a);function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var T=function(){function e(t){var n=t.name,r=t.job;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._job=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,job:this._job.textContent}}},{key:"setUserInfo",value:function(e){var t=e.title,n=e.about;this._name.textContent=t,this._job.textContent=n}}])&&R(t.prototype,n),e}();function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var A,V=function(e,t){return fetch(e,t).then((function(e){return e.ok?e.json():Promise.reject(e.statusText)})).catch(console.log)},D=new(function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return V("".concat(this._baseUrl,"/cards"),{headers:this._headers})}},{key:"getUserInfo",value:function(){return V("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}},{key:"setUserInfo",value:function(e){return V("".concat(this._baseUrl,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify(e)})}},{key:"createCard",value:function(e){return V("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify(e)})}},{key:"deleteCard",value:function(e){return V("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"})}},{key:"likeCard",value:function(e){return V("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"})}},{key:"removeLike",value:function(e){return V("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"DELETE"})}},{key:"updateProfile",value:function(e){return V("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify(e)})}}])&&U(t.prototype,n),e}())({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"9b991f86-368d-4ef3-963c-b91580821c46","Content-Type":"application/json"}});function H(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}Promise.all([D.getInitialCards(),D.getUserInfo()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,l=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){l=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(l)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return H(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?H(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];A=i._id,o.forEach((function(e){ae(e)})),te.setUserInfo({title:i.name,about:i.about})})).catch((function(e){console.log(e)}));var M=document.querySelector(".profile__edit-button"),N=document.querySelector(".profile__image"),J=document.querySelector(".profile__add-button"),Y=document.querySelector(".modal_type_add-card"),$=document.querySelector(".modal_type_edit-card"),z=document.querySelector(".modal_type_profile-edit"),F=document.querySelector("#title"),G=document.querySelector("#about"),K=document.querySelector("#element").content,Q=new p(".modal_type_image-card");Q.setEventListeners();var W=new E(".modal_type_add-card",(function(e){W.loading(),D.createCard({name:e.title,link:e.imagelink}).then((function(e){ae(e),W.close(),W.loaded()})).catch((function(e){console.log(e)}))}));W.setEventListeners();var X=new E(".modal_type_edit-card",(function(e){X.loading(),D.setUserInfo({name:e.title,about:e.about}).then((function(t){te.setUserInfo(e),X.loaded()})).catch((function(e){console.log(e)})),X.close()}));X.setEventListeners();var Z=new B(".modal_type_confirm");Z.setEventListeners();var ee=new E(".modal_type_profile-edit",(function(e){ee.loading(),D.updateProfile({avatar:e.profilelink}).then((function(t){N.src=e.profilelink,ee.loaded()})).catch((function(e){console.log(e)})),ee.close()}));ee.setEventListeners();var te=new T({name:".profile__name",job:".profile__about-me"}),ne=new C({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg",alt:"Yosemite Valley"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg",alt:"Lake Louise"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg",alt:"Bald Mountains"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg",alt:"Latemar"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg",alt:"Vanoise National Park"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg",alt:"Lago di Braies"}],renderer:function(e){ae(e)}},".elements");M.addEventListener("click",(function(){var e=te.getUserInfo();F.value=e.name,G.value=e.job,X.open(),re.resetValidation()})),J.addEventListener("click",(function(){W.open(),oe.resetValidation()})),N.addEventListener("click",(function(){ee.open(),ie.resetValidation()}));var re=new t(n,$);re.enableValidation();var oe=new t(n,Y);oe.enableValidation();var ie=new t(n,z);function ae(e){var t=new o(e,K,Q.open,(function(e){Z.open(),Z.setAction((function(){Z.loading(),D.deleteCard(e).then((function(e){t.removeCard(),Z.close(),Z.loaded()})).catch((function(e){console.log(e)}))}))}),A,(function(e){t.isLiked()?D.removeLike(e).then((function(e){t.dislikeCard(e.likes)})).catch((function(e){console.log(e)})):D.likeCard(e).then((function(e){t.likeCard(e.likes)})).catch((function(e){console.log(e)}))}));ne.addItem(t.render())}ie.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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dUIsR0FDSnRCLFFBQVFDLElBQUlxQixNQUdoQnBCLEVBQUl3RCxTQUFTM0ssR0FDWnlHLE1BQUssU0FBQUMsR0FDRjJELEVBQUtNLFNBQVNqRSxFQUFJekUsVUFFckIrRSxPQUFNLFNBQUN1QixHQUNKdEIsUUFBUUMsSUFBSXFCLFNBSXhCdUIsR0FBbUJjLFFBQVFQLEVBQUtRLFVBcENwQ1YsR0FBcUJDLG1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJhY3RpY3VtLXByb2plY3QvLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS1wcm9qZWN0Ly4vc3JjL3V0aWxzL3V0aWxzLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS1wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0tcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS1wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLXByb2plY3QvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS1wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0tcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aFN1Ym1pdC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0tcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS1wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS1wcm9qZWN0Ly4vc3JjL3BhZ2UvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgICBjb25zdHJ1Y3RvcihzZXR0aW5ncywgZm9ybUVsZW1lbnQpe1xyXG4gICAgICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSBzZXR0aW5ncy5pbnB1dFNlbGVjdG9yO1xyXG4gICAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gc2V0dGluZ3Muc3VibWl0QnV0dG9uU2VsZWN0b3I7XHJcbiAgICAgICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IHNldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICAgICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gc2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzO1xyXG4gICAgICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBzZXR0aW5ncy5lcnJvckNsYXNzO1xyXG4gICAgICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnQ7XHJcbiAgICAgICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbSh0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpKTtcclxuICAgICAgICB0aGlzLl9idXR0b25FbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgICB9XHJcbiAgICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCB2YWxpZGF0aW9uTWVzc2FnZSkge1xyXG4gICAgICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuICAgICAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IHZhbGlkYXRpb25NZXNzYWdlO1xyXG4gICAgICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gICAgfVxyXG4gICAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xyXG4gICAgICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuICAgICAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XHJcbiAgICAgICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgICB9XHJcbiAgICBfdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRFbGVtZW50cywgYnV0dG9uRWxlbWVudCl7XHJcbiAgICAgICAgY29uc3QgaGFzSW52YWxpZElucHV0ID0gaW5wdXRFbGVtZW50cy5zb21lKGlucHV0RWxlbWVudCA9PiAhaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKTtcclxuICAgICAgICBpZiAoaGFzSW52YWxpZElucHV0KXtcclxuICAgICAgICBidXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgICAgYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICBidXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgICAgYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KXtcclxuICAgICAgICBpZihpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpe1xyXG4gICAgICAgICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSk7XHJcbiAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlKTtcclxuICAgICAgICAgfSAgXHJcbiAgICB9XHJcbiAgICBfc2V0RXZlbnRMaXN0ZW5lcnMoKXtcclxuICAgICAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaChpbnB1dEVsZW1lbnQgPT4ge1xyXG4gICAgICAgICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKHRoaXMuX2lucHV0TGlzdCwgdGhpcy5fYnV0dG9uRWxlbWVudCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgcmVzZXRWYWxpZGF0aW9uKCkge1xyXG4gICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSh0aGlzLl9pbnB1dExpc3QsdGhpcy5fYnV0dG9uRWxlbWVudCk7IFxyXG4gICAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCkgXHJcbiAgICAgIH0pO1xyXG5cclxuICAgIH1cclxuICAgIGVuYWJsZVZhbGlkYXRpb24oKSB7XHJcbiAgICAgICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgZSA9PiB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGb3JtVmFsaWRhdG9yOyIsImV4cG9ydCBmdW5jdGlvbiBjbG9zZUJ5RXNjYXBlKGV2dCl7XHJcbiAgICBpZihldnQua2V5ID09PSBcIkVzY2FwZVwiKXtcclxuICAgICAgICBjb25zdCBvcGVuZWRQb3B1cCAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfb3BlbmVkJyk7XHJcbiAgICAgICAgY2xvc2VNb2RhbChvcGVuZWRQb3B1cCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBmb3JtU2V0dGluZ3MgPSB7XHJcbiAgICBpbnB1dFNlbGVjdG9yOiBcIi5tb2RhbF9faW5wdXRcIixcclxuICAgIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5tb2RhbF9fc2F2ZVwiLFxyXG4gICAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJtb2RhbF9fc2F2ZV9kaXNhYmxlZFwiLFxyXG4gICAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgICBlcnJvckNsYXNzOiBcIm1vZGFsX19lcnJvcl92aXNpYmxlXCJcclxuICB9XHJcblxyXG5mdW5jdGlvbiBjbGlja0Nsb3NlKGV2dCkge1xyXG4gICAgY29uc3QgcGFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wYWdlJyk7XHJcbiAgICBjb25zdCBwYWdlV3JhcHBlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wYWdlX193cmFwcGVyJyk7XHJcbiAgICBpZiAoKGV2dC50YXJnZXQgPT09IHBhZ2UpfHwoZXZ0LnRhcmdldCA9PT0gcGFnZVdyYXBwZXIpKSB7XHJcbiAgICAgIGNvbnN0IG9wZW5lZFBvcHVwICA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbF9vcGVuZWQnKTtcclxuICAgICAgY2xvc2VNb2RhbChvcGVuZWRQb3B1cCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBvcGVuTW9kYWwobW9kYWxXaW5kb3cpIHtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgY2xvc2VCeUVzY2FwZSk7XHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNsaWNrQ2xvc2UpO1xyXG4gICAgbW9kYWxXaW5kb3cuY2xhc3NMaXN0LmFkZChgbW9kYWxfb3BlbmVkYCk7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucGFnZV9fb3ZlcmxheScpLmNsYXNzTGlzdC5yZW1vdmUoJ3BhZ2VfX292ZXJsYXlfZGlzYWJsZWQnKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNsb3NlTW9kYWwobW9kYWxXaW5kb3cpIHtcclxuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleXVwJyAsIGNsb3NlQnlFc2NhcGUpO1xyXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snICwgY2xpY2tDbG9zZSk7XHJcbiAgICBtb2RhbFdpbmRvdy5jbGFzc0xpc3QucmVtb3ZlKGBtb2RhbF9vcGVuZWRgKTtcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wYWdlX19vdmVybGF5JykuY2xhc3NMaXN0LmFkZCgncGFnZV9fb3ZlcmxheV9kaXNhYmxlZCcpO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgaW5pdGlhbENhcmRzID0gW3tcclxuICAgIG5hbWU6IFwiWW9zZW1pdGUgVmFsbGV5XCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL3lvc2VtaXRlLmpwZ1wiLFxyXG4gICAgYWx0OiAgXCJZb3NlbWl0ZSBWYWxsZXlcIlxyXG59LFxyXG57XHJcbiAgICBuYW1lOiBcIkxha2UgTG91aXNlXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL2xha2UtbG91aXNlLmpwZ1wiLFxyXG4gICAgYWx0OiAgXCJMYWtlIExvdWlzZVwiXHJcbn0sXHJcbntcclxuICAgIG5hbWU6IFwiQmFsZCBNb3VudGFpbnNcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvYmFsZC1tb3VudGFpbnMuanBnXCIsXHJcbiAgICBhbHQ6ICBcIkJhbGQgTW91bnRhaW5zXCJcclxufSxcclxue1xyXG4gICAgbmFtZTogXCJMYXRlbWFyXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL2xhdGVtYXIuanBnXCIsXHJcbiAgICBhbHQ6ICBcIkxhdGVtYXJcIlxyXG59LFxyXG57XHJcbiAgICBuYW1lOiBcIlZhbm9pc2UgTmF0aW9uYWwgUGFya1wiLFxyXG4gICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS92YW5vaXNlLmpwZ1wiLFxyXG4gICAgYWx0OiAgXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIlxyXG59LFxyXG57XHJcbiAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL2xhZ28uanBnXCIsXHJcbiAgICBhbHQ6ICBcIkxhZ28gZGkgQnJhaWVzXCJcclxufVxyXG5dO1xyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJkIHtcclxuICAgIGNvbnN0cnVjdG9yKGNhcmREYXRhLCBjYXJkVGVtcGxhdGVTZWxlY3Rvciwgb25JbWFnZUNsaWNrLCBoYW5kbGVEZWxldGVDYXJkLCB1c2VySWQsIGhhbmRsZUxpa2VJY29uKSB7XHJcbiAgICAgICAgdGhpcy5fbmFtZSA9IGNhcmREYXRhLm5hbWU7XHJcbiAgICAgICAgdGhpcy5fbGluayA9IGNhcmREYXRhLmxpbms7XHJcbiAgICAgICAgdGhpcy5fbGlrZXMgPSBjYXJkRGF0YS5saWtlcztcclxuICAgICAgICB0aGlzLl9vd25lcklkID0gY2FyZERhdGEub3duZXIuX2lkO1xyXG4gICAgICAgIHRoaXMuX3RlbXBsYXRlID0gY2FyZFRlbXBsYXRlU2VsZWN0b3I7XHJcbiAgICAgICAgdGhpcy5fb25JbWFnZUNsaWNrID0gb25JbWFnZUNsaWNrO1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNhcmQgPSBoYW5kbGVEZWxldGVDYXJkO1xyXG4gICAgICAgIHRoaXMuX2xpa2UgPSBoYW5kbGVMaWtlSWNvbjtcclxuICAgICAgICB0aGlzLl9pZCA9IGNhcmREYXRhLl9pZDtcclxuICAgICAgICB0aGlzLl91c2VySWQgPSB1c2VySWQ7XHJcbiAgICAgICAgdGhpcy5faXNMaWtlZCA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZW1vdmVDYXJkKCkge1xyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50ID0gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGlrZUNhcmQobmV3TGlrZXMpIHtcclxuICAgICAgICAgICAgdGhpcy5fbGlrZXMgPSBuZXdMaWtlcztcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fbGlrZS1jb3VudCcpLnRleHRDb250ZW50ID0gdGhpcy5fbGlrZXMubGVuZ3RoO1xyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19saWtlLWJ1dHRvbicpLmNsYXNzTGlzdC5hZGQoYGVsZW1lbnRfX2xpa2UtYnV0dG9uX2FjdGl2ZWApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZGlzbGlrZUNhcmQobmV3TGlrZXMpIHtcclxuICAgICAgICAgICAgdGhpcy5fbGlrZXMgPSBuZXdMaWtlcztcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fbGlrZS1jb3VudCcpLnRleHRDb250ZW50ID0gdGhpcy5fbGlrZXMubGVuZ3RoO1xyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19saWtlLWJ1dHRvbicpLmNsYXNzTGlzdC5yZW1vdmUoYGVsZW1lbnRfX2xpa2UtYnV0dG9uX2FjdGl2ZWApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBfaGFuZGxlSW1hZ2UoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX29uSW1hZ2VDbGljayh7bGluazogdGhpcy5fbGluaywgdGV4dDogdGhpcy5fbmFtZX0pXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBfYWRkRXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2xpa2UtYnV0dG9uJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLl9saWtlKHRoaXMuX2lkKSk7XHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2RlbGV0ZS1idXR0b24nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsKCkgPT4gdGhpcy5faGFuZGxlRGVsZXRlQ2FyZCh0aGlzLl9pZCkpO1xyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19pbWFnZS1idXR0b24nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuX2hhbmRsZUltYWdlKHRoaXMuX2VsZW1lbnQpKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJlbmRlcigpIHtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl90ZW1wbGF0ZS5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQgPSAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudCcpO1xyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19pbWFnZScpLnNyYyA9IHRoaXMuX2xpbms7XHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2ltYWdlJykuYWx0ID0gYEltYWdlIG9mICR7dGhpcy5fbGlua31gO1xyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X190aXRsZScpLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTsgICAgXHJcbiAgICAgICAgICAgIGlmKHRoaXMuX293bmVySWQgIT09IHRoaXMuX3VzZXJJZCl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19kZWxldGUtYnV0dG9uJykuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgfSAgICAgICBcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fbGlrZS1jb3VudCcpLnRleHRDb250ZW50ID0gdGhpcy5fbGlrZXMubGVuZ3RoO1xyXG4gICAgICAgICAgICBpZih0aGlzLmlzTGlrZWQoKSl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19saWtlLWJ1dHRvbicpLmNsYXNzTGlzdC5hZGQoYGVsZW1lbnRfX2xpa2UtYnV0dG9uX2FjdGl2ZWApO1xyXG4gICAgICAgICAgICB9IFxyXG4gICAgICAgICAgICB0aGlzLl9hZGRFdmVudExpc3RlbmVycygpO1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlzTGlrZWQoKXtcclxuICAgICAgICAgICAgdGhpcy5faXNMaWtlZCA9IHRoaXMuX2xpa2VzLnNvbWUoKHBlcnNvbikgPT4gcGVyc29uLl9pZCA9PT0gdGhpcy5fdXNlcklkKTtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2lzTGlrZWQ7XHJcbiAgICAgICAgfVxyXG4gICAgfSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgICAgICB0aGlzLl9wb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLm1vZGFsX19zYXZlJyk7XHJcbiAgICAgICAgdGhpcy5fb3ZlcmxheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5wYWdlX19vdmVybGF5YCk7XHJcbiAgICAgICAgdGhpcy5jbG9zZS5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG4gICAgb3Blbigpe1xyXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgdGhpcy5faGFuZGxlRXNjYXBlQ2xvc2UpO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoYG1vZGFsX29wZW5lZGApO1xyXG4gICAgICAgIHRoaXMuX292ZXJsYXkuY2xhc3NMaXN0LnJlbW92ZSgncGFnZV9fb3ZlcmxheV9kaXNhYmxlZCcpO1xyXG4gICAgfVxyXG4gICAgY2xvc2UoKXtcclxuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXl1cCcsIHRoaXMuX2hhbmRsZUVzY2FwZUNsb3NlKTtcclxuICAgICAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QucmVtb3ZlKGBtb2RhbF9vcGVuZWRgKTtcclxuICAgICAgICB0aGlzLl9vdmVybGF5LmNsYXNzTGlzdC5hZGQoJ3BhZ2VfX292ZXJsYXlfZGlzYWJsZWQnKTtcclxuICAgIH1cclxuICAgIHNldEV2ZW50TGlzdGVuZXJzKCl7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgIGlmKGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKGBwYWdlX193cmFwcGVyYCkgfHwgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoYHBhZ2VgKSB8fCBldnQudGFyZ2V0LnBhcmVudEVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdtb2RhbF9fY2xvc2UnKSl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTsgXHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBfaGFuZGxlRXNjYXBlQ2xvc2UgPSAoZXZ0KSA9PiB7XHJcbiAgICAgICAgaWYoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIil7XHJcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBsb2FkaW5nKCl7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gXCJDaGVja2luZy4uLlwiXHJcbiAgICB9XHJcbiAgICBsb2FkZWQoKXtcclxuICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBgJHt0aGlzLl9zdWJtaXRCdXR0b25EZWZhdWx0fWA7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICAgICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICAgICAgdGhpcy5faW1hZ2VFbGVtZW50ID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLm1vZGFsX19pbWFnZScpO1xyXG4gICAgICAgIHRoaXMuX2ltYWdlQ2FwdGlvbiA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbF9fZm9vdGVyJyk7XHJcbiAgICB9XHJcbiAgICBvcGVuID0gKHsgbGluaywgdGV4dCB9KSA9PiB7XHJcbiAgICAgICAgdGhpcy5faW1hZ2VFbGVtZW50LnNyYyA9IGxpbms7XHJcbiAgICAgICAgdGhpcy5faW1hZ2VFbGVtZW50LmFsdCA9IGBJbWFnZSBvZiAke2xpbmt9YDtcclxuICAgICAgICB0aGlzLl9pbWFnZUNhcHRpb24udGV4dENvbnRlbnQgPSB0ZXh0O1xyXG4gICAgICAgIHN1cGVyLm9wZW4oKTtcclxuICAgIH1cclxufSIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgaGFuZGxlU3VibWl0Rm9ybSkge1xyXG4gICAgICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX3N1Ym1pdEhhbmRsZXIgPSBoYW5kbGVTdWJtaXRGb3JtO1xyXG4gICAgICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX2Zvcm0nKTtcclxuICAgICAgICB0aGlzLl9pbnB1dHMgPSBbLi4udGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCcubW9kYWxfX2lucHV0JyldO1xyXG4gICAgICAgIHRoaXMuX2lucHV0VmFsdWVzID0ge307XHJcbiAgICB9XHJcbiAgICBfZ2V0SW5wdXRWYWx1ZXMoKXtcclxuICAgICAgICB0aGlzLl9pbnB1dHMuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5faW5wdXRWYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIHJldHVybiB0aGlzLl9pbnB1dFZhbHVlcztcclxuICAgIH1cclxuICAgIHNldEV2ZW50TGlzdGVuZXJzKCl7XHJcbiAgICAgICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgICAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsICgpID0+IHRoaXMuX3N1Ym1pdEhhbmRsZXIodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSkpO1xyXG4gICAgfVxyXG4gICAgb3Blbigpe1xyXG4gICAgICAgIHN1cGVyLm9wZW4oKTtcclxuICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b25EZWZhdWx0ID0gdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50O1xyXG4gICAgfVxyXG4gICAgY2xvc2UoKXtcclxuICAgICAgICBzdXBlci5jbG9zZSgpO1xyXG4gICAgICAgIHRoaXMuX2Zvcm0ucmVzZXQoKTtcclxuICAgIH1cclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xyXG4gICAgY29uc3RydWN0b3IoeyBpdGVtcywgcmVuZGVyZXIgfSAsIGNsYXNzU2VsZWN0b3IpIHtcclxuICAgICAgICB0aGlzLl9pdGVtcyA9IGl0ZW1zO1xyXG4gICAgICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgICAgICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihjbGFzc1NlbGVjdG9yKTtcclxuICAgIH1cclxuICAgIHJlbmRlckl0ZW1zKCl7XHJcbiAgICAgICAgdGhpcy5faXRlbXMuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX3JlbmRlcmVyKGVsZW1lbnQpO1xyXG4gICAgICAgIH0pICBcclxuICAgIH1cclxuICAgIGFkZEl0ZW0gKGVsZW1lbnQpe1xyXG4gICAgICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWxlbWVudCk7XHJcbiAgICB9XHJcblxyXG59IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhTdWJtaXQgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICAgICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB9XHJcbiAgICAgc2V0QWN0aW9uKGFjdGlvbikge1xyXG4gICAgICAgICB0aGlzLl9zdWJtaXRIYW5kbGVyID0gYWN0aW9uO1xyXG4gICAgIH1cclxuXHJcbiAgICAgc2V0RXZlbnRMaXN0ZW5lcnMoKXtcclxuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgICAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7IFxyXG4gICAgICAgICAgICB0aGlzLl9zdWJtaXRIYW5kbGVyKCk7XHJcbiAgICAgICAgIH0pOyAgIFxyXG4gICAgIH1cclxuICAgICBvcGVuKCl7XHJcbiAgICAgICAgc3VwZXIub3BlbigpO1xyXG4gICAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbkRlZmF1bHQgPSB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQ7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7IG5hbWUsIGpvYiB9KXtcclxuICAgICAgICB0aGlzLl9uYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lKTtcclxuICAgICAgICB0aGlzLl9qb2IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGpvYik7XHJcbiAgICB9XHJcbiAgICBnZXRVc2VySW5mbygpe1xyXG4gICAgICAgIHJldHVybiB7IFxyXG4gICAgICAgICAgICBuYW1lOiB0aGlzLl9uYW1lLnRleHRDb250ZW50LFxyXG4gICAgICAgICAgICBqb2I6IHRoaXMuX2pvYi50ZXh0Q29udGVudFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHNldFVzZXJJbmZvKHsgdGl0bGUsIGFib3V0IH0pe1xyXG4gICAgICAgIHRoaXMuX25hbWUudGV4dENvbnRlbnQgPSB0aXRsZTtcclxuICAgICAgICB0aGlzLl9qb2IudGV4dENvbnRlbnQgPSBhYm91dDtcclxuICAgIH1cclxufSIsImNvbnN0IGN1c3RvbUZldGNoID0gKHVybCAsIGhlYWRlcnMpID0+IFxyXG4gICAgZmV0Y2godXJsICwgaGVhZGVycylcclxuICAgIC50aGVuKHJlcyA9PiByZXMub2sgPyByZXMuanNvbigpIDogUHJvbWlzZS5yZWplY3QocmVzLnN0YXR1c1RleHQpKVxyXG4gICAgLmNhdGNoKGNvbnNvbGUubG9nKTtcclxuXHJcbmNsYXNzIEFwaXtcclxuICAgIGNvbnN0cnVjdG9yKHtiYXNlVXJsLCBoZWFkZXJzfSkge1xyXG4gICAgICAgIHRoaXMuX2Jhc2VVcmwgPSBiYXNlVXJsO1xyXG4gICAgICAgIHRoaXMuX2hlYWRlcnMgPSBoZWFkZXJzO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEluaXRpYWxDYXJkcygpe1xyXG4gICAgICAgIHJldHVybiBjdXN0b21GZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVyc1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgZ2V0VXNlckluZm8oKXtcclxuICAgICAgICByZXR1cm4gY3VzdG9tRmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIHNldFVzZXJJbmZvKGRhdGEpe1xyXG4gICAgICAgIHJldHVybiBjdXN0b21GZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxyXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKSAgXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuICAgIGNyZWF0ZUNhcmQoZGF0YSkge1xyXG4gICAgICAgIHJldHVybiBjdXN0b21GZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBkZWxldGVDYXJkKGNhcmRJZCkge1xyXG4gICAgICAgIHJldHVybiBjdXN0b21GZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH1gLCB7XHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgICAgICAgIG1ldGhvZDogJ0RFTEVURScsXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuICAgIGxpa2VDYXJkKGNhcmRJZCkge1xyXG4gICAgICAgIHJldHVybiBjdXN0b21GZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy9saWtlcy8ke2NhcmRJZH1gLCB7XHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgICAgICAgIG1ldGhvZDogJ1BVVCcsXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuICAgIHJlbW92ZUxpa2UoY2FyZElkKSB7XHJcbiAgICAgICAgcmV0dXJuIGN1c3RvbUZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzL2xpa2VzLyR7Y2FyZElkfWAsIHtcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICAgICAgbWV0aG9kOiAnREVMRVRFJyxcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG4gICAgdXBkYXRlUHJvZmlsZShkYXRhKSB7XHJcbiAgICAgICAgcmV0dXJuIGN1c3RvbUZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxyXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGNvbnN0IGFwaSA9IG5ldyBBcGkoe1xyXG4gICAgYmFzZVVybDogXCJodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL2dyb3VwLTEyXCIsXHJcbiAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgYXV0aG9yaXphdGlvbjogXCI5Yjk5MWY4Ni0zNjhkLTRlZjMtOTYzYy1iOTE1ODA4MjFjNDZcIixcclxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxyXG4gICAgfVxyXG59KTsiLCJpbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xyXG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XHJcbmltcG9ydCB7IGluaXRpYWxDYXJkcywgZm9ybVNldHRpbmdzLCBsb2FkaW5nfSBmcm9tIFwiLi4vdXRpbHMvdXRpbHMuanNcIjtcclxuaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xyXG5pbXBvcnQgUG9wdXAgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXAuanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoU3VibWl0IGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aFN1Ym1pdFwiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuaW1wb3J0IHsgYXBpIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvQXBpLmpzXCI7XHJcblxyXG5sZXQgdXNlcklkO1xyXG5Qcm9taXNlLmFsbChbYXBpLmdldEluaXRpYWxDYXJkcygpLCBhcGkuZ2V0VXNlckluZm8oKV0pXHJcbi50aGVuKChbY2FyZHMsIHVzZXJJbmZvXSkgPT4ge1xyXG4gICAgdXNlcklkID0gdXNlckluZm8uX2lkO1xyXG4gICAgY2FyZHMuZm9yRWFjaChjYXJkRGF0YSA9PiB7XHJcbiAgICAgICAgY3JlYXRlQ2FyZChjYXJkRGF0YSk7XHJcbiAgICB9KTtcclxuICAgIHVzZXJEYXRhLnNldFVzZXJJbmZvKHsgdGl0bGU6IHVzZXJJbmZvLm5hbWUsIGFib3V0OiB1c2VySW5mby5hYm91dCB9KTtcclxufSlcclxuLmNhdGNoKChlcnIpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgfSk7XHJcblxyXG5jb25zdCBtb2RhbEVkaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAucHJvZmlsZV9fZWRpdC1idXR0b25gKTtcclxuY29uc3QgbW9kYWxQcm9maWxlRWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5wcm9maWxlX19pbWFnZWApO1xyXG5jb25zdCBtb2RhbEFkZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5wcm9maWxlX19hZGQtYnV0dG9uYCk7XHJcbmNvbnN0IG1vZGFsQWRkRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5tb2RhbF90eXBlX2FkZC1jYXJkYCk7XHJcbmNvbnN0IG1vZGFsRWRpdEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAubW9kYWxfdHlwZV9lZGl0LWNhcmRgKTtcclxuY29uc3QgbW9kYWxQcm9maWxlRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5tb2RhbF90eXBlX3Byb2ZpbGUtZWRpdGApO1xyXG5jb25zdCBwcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCN0aXRsZWApO1xyXG5jb25zdCBwcm9maWxlQWJvdXRNZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNhYm91dGApO1xyXG5jb25zdCBlbGVtZW50VGVtcGxhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjZWxlbWVudGApLmNvbnRlbnQ7XHJcblxyXG5cclxuXHJcbmNvbnN0IG1vZGFsSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoJy5tb2RhbF90eXBlX2ltYWdlLWNhcmQnKTtcclxubW9kYWxJbWFnZS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgbW9kYWxBZGQgPSBuZXcgUG9wdXBXaXRoRm9ybShgLm1vZGFsX3R5cGVfYWRkLWNhcmRgLCAoZGF0YSkgPT4ge1xyXG4gICAgbW9kYWxBZGQubG9hZGluZygpO1xyXG4gICAgYXBpLmNyZWF0ZUNhcmQoe25hbWU6IGRhdGEudGl0bGUsIGxpbms6IGRhdGEuaW1hZ2VsaW5rfSlcclxuICAgIC50aGVuKHJlcyA9PiB7XHJcbiAgICAgICAgY3JlYXRlQ2FyZChyZXMpO1xyXG4gICAgICAgIG1vZGFsQWRkLmNsb3NlKCk7XHJcbiAgICAgICAgbW9kYWxBZGQubG9hZGVkKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICB9KTtcclxuICAgICAgXHJcbn0pO1xyXG5tb2RhbEFkZC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgbW9kYWxFZGl0ID0gbmV3IFBvcHVwV2l0aEZvcm0oYC5tb2RhbF90eXBlX2VkaXQtY2FyZGAsIChkYXRhKSA9PiB7XHJcbiAgICBtb2RhbEVkaXQubG9hZGluZygpO1xyXG4gICAgYXBpLnNldFVzZXJJbmZvKHtuYW1lOiBkYXRhLnRpdGxlLCBhYm91dDogZGF0YS5hYm91dH0pXHJcbiAgICAudGhlbihyZXMgPT57XHJcbiAgICAgICAgdXNlckRhdGEuc2V0VXNlckluZm8oZGF0YSk7XHJcbiAgICAgICAgbW9kYWxFZGl0LmxvYWRlZCgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgfSk7XHJcbiAgICBtb2RhbEVkaXQuY2xvc2UoKTtcclxufSk7XHJcbm1vZGFsRWRpdC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgbW9kYWxDb25maXJtID0gbmV3IFBvcHVwV2l0aFN1Ym1pdChgLm1vZGFsX3R5cGVfY29uZmlybWApO1xyXG5tb2RhbENvbmZpcm0uc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IG1vZGFsUHJvZmlsZUVkaXQ9IG5ldyBQb3B1cFdpdGhGb3JtKGAubW9kYWxfdHlwZV9wcm9maWxlLWVkaXRgLChkYXRhKSA9PiB7XHJcbiAgICBtb2RhbFByb2ZpbGVFZGl0LmxvYWRpbmcoKTtcclxuICAgIGFwaS51cGRhdGVQcm9maWxlKHthdmF0YXI6IGRhdGEucHJvZmlsZWxpbmt9KVxyXG4gICAgLnRoZW4ocmVzID0+e1xyXG4gICAgICAgIG1vZGFsUHJvZmlsZUVkaXRCdXR0b24uc3JjID0gZGF0YS5wcm9maWxlbGluaztcclxuICAgICAgICBtb2RhbFByb2ZpbGVFZGl0LmxvYWRlZCgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgfSk7XHJcbiAgICBtb2RhbFByb2ZpbGVFZGl0LmNsb3NlKCk7XHJcbn0pO1xyXG5tb2RhbFByb2ZpbGVFZGl0LnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5jb25zdCB1c2VyRGF0YSA9IG5ldyBVc2VySW5mbyh7XHJcbiAgICBuYW1lOiAnLnByb2ZpbGVfX25hbWUnLCBqb2I6ICcucHJvZmlsZV9fYWJvdXQtbWUnXHJcbn0pO1xyXG5cclxuY29uc3QgaW5pdGlhbENhcmRzUmVuZGVyID0gbmV3IFNlY3Rpb24oe2l0ZW1zOiBpbml0aWFsQ2FyZHMsIHJlbmRlcmVyOiAoZWxlbWVudCk9PntcclxuICAgIGNyZWF0ZUNhcmQoZWxlbWVudCk7XHJcbn19LCBcIi5lbGVtZW50c1wiKTtcclxuXHJcblxyXG5cclxuXHJcbm1vZGFsRWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgIGNvbnN0IGRhdGEgPSB1c2VyRGF0YS5nZXRVc2VySW5mbygpO1xyXG4gICAgcHJvZmlsZU5hbWUudmFsdWUgPSBkYXRhLm5hbWU7XHJcbiAgICBwcm9maWxlQWJvdXRNZS52YWx1ZSA9IGRhdGEuam9iO1xyXG4gICAgbW9kYWxFZGl0Lm9wZW4oKTtcclxuICAgIGVkaXRDYXJkVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xyXG4gIH0pO1xyXG5cclxubW9kYWxBZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PntcclxuICAgIG1vZGFsQWRkLm9wZW4oKTtcclxuICAgIGFkZENhcmRWYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XHJcbn0pO1xyXG5tb2RhbFByb2ZpbGVFZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT57XHJcbiAgICBtb2RhbFByb2ZpbGVFZGl0Lm9wZW4oKTtcclxuICAgIHByb2ZpbGVDYXJkVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xyXG59KVxyXG5cclxuXHJcbmNvbnN0IGVkaXRDYXJkVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoZm9ybVNldHRpbmdzLCBtb2RhbEVkaXRFbGVtZW50KTtcclxuZWRpdENhcmRWYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5jb25zdCBhZGRDYXJkVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoZm9ybVNldHRpbmdzLCBtb2RhbEFkZEVsZW1lbnQpO1xyXG5hZGRDYXJkVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuY29uc3QgcHJvZmlsZUNhcmRWYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihmb3JtU2V0dGluZ3MsIG1vZGFsUHJvZmlsZUVsZW1lbnQpO1xyXG5wcm9maWxlQ2FyZFZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVDYXJkKGRhdGEpIHtcclxuICAgIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChkYXRhLCBlbGVtZW50VGVtcGxhdGUsIG1vZGFsSW1hZ2Uub3BlbiwgKGlkKSA9PntcclxuICAgICAgICBtb2RhbENvbmZpcm0ub3BlbigpO1xyXG4gICAgICAgIG1vZGFsQ29uZmlybS5zZXRBY3Rpb24oKCkgPT4ge1xyXG4gICAgICAgICAgICBtb2RhbENvbmZpcm0ubG9hZGluZygpO1xyXG4gICAgICAgICAgICBhcGkuZGVsZXRlQ2FyZChpZClcclxuICAgICAgICAgICAgLnRoZW4ocmVzID0+IHtcclxuICAgICAgICAgICAgICAgIGNhcmQucmVtb3ZlQ2FyZCgpO1xyXG4gICAgICAgICAgICAgICAgbW9kYWxDb25maXJtLmNsb3NlKCk7XHJcbiAgICAgICAgICAgICAgICBtb2RhbENvbmZpcm0ubG9hZGVkKCk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSwgdXNlcklkLCAoaWQpID0+e1xyXG4gICAgICAgIGlmIChjYXJkLmlzTGlrZWQoKSl7XHJcbiAgICAgICAgICAgIGFwaS5yZW1vdmVMaWtlKGlkKVxyXG4gICAgICAgICAgICAudGhlbihyZXMgPT4geyAgXHJcbiAgICAgICAgICAgICAgICBjYXJkLmRpc2xpa2VDYXJkKHJlcy5saWtlcyk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGFwaS5saWtlQ2FyZChpZClcclxuICAgICAgICAgICAgLnRoZW4ocmVzID0+IHsgIFxyXG4gICAgICAgICAgICAgICAgY2FyZC5saWtlQ2FyZChyZXMubGlrZXMpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9KVxyXG4gICAgaW5pdGlhbENhcmRzUmVuZGVyLmFkZEl0ZW0oY2FyZC5yZW5kZXIoKSk7XHJcbn0iXSwibmFtZXMiOlsiRm9ybVZhbGlkYXRvciIsInNldHRpbmdzIiwiZm9ybUVsZW1lbnQiLCJ0aGlzIiwiX2lucHV0U2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX2Zvcm1FbGVtZW50IiwiX2lucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJfYnV0dG9uRWxlbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJpbnB1dEVsZW1lbnQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsImVycm9yRWxlbWVudCIsImlkIiwiY2xhc3NMaXN0IiwiYWRkIiwidGV4dENvbnRlbnQiLCJyZW1vdmUiLCJpbnB1dEVsZW1lbnRzIiwiYnV0dG9uRWxlbWVudCIsInNvbWUiLCJ2YWxpZGl0eSIsInZhbGlkIiwiZGlzYWJsZWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJmb3JFYWNoIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJlIiwicHJldmVudERlZmF1bHQiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJmb3JtU2V0dGluZ3MiLCJDYXJkIiwiY2FyZERhdGEiLCJjYXJkVGVtcGxhdGVTZWxlY3RvciIsIm9uSW1hZ2VDbGljayIsImhhbmRsZURlbGV0ZUNhcmQiLCJ1c2VySWQiLCJoYW5kbGVMaWtlSWNvbiIsIl9uYW1lIiwibmFtZSIsIl9saW5rIiwibGluayIsIl9saWtlcyIsImxpa2VzIiwiX293bmVySWQiLCJvd25lciIsIl9pZCIsIl90ZW1wbGF0ZSIsIl9vbkltYWdlQ2xpY2siLCJfaGFuZGxlRGVsZXRlQ2FyZCIsIl9saWtlIiwiX3VzZXJJZCIsIl9pc0xpa2VkIiwiX2VsZW1lbnQiLCJuZXdMaWtlcyIsImxlbmd0aCIsInRleHQiLCJfaGFuZGxlSW1hZ2UiLCJjbG9uZU5vZGUiLCJzcmMiLCJhbHQiLCJzdHlsZSIsImRpc3BsYXkiLCJpc0xpa2VkIiwiX2FkZEV2ZW50TGlzdGVuZXJzIiwicGVyc29uIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiZXZ0Iiwia2V5IiwiY2xvc2UiLCJfcG9wdXAiLCJkb2N1bWVudCIsIl9zdWJtaXRCdXR0b24iLCJfb3ZlcmxheSIsImJpbmQiLCJfaGFuZGxlRXNjYXBlQ2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwidGFyZ2V0IiwiY29udGFpbnMiLCJwYXJlbnRFbGVtZW50IiwiX3N1Ym1pdEJ1dHRvbkRlZmF1bHQiLCJQb3B1cFdpdGhJbWFnZSIsIl9pbWFnZUVsZW1lbnQiLCJfaW1hZ2VDYXB0aW9uIiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZVN1Ym1pdEZvcm0iLCJfc3VibWl0SGFuZGxlciIsIl9mb3JtIiwiX2lucHV0cyIsIl9pbnB1dFZhbHVlcyIsImlucHV0IiwidmFsdWUiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJyZXNldCIsIlNlY3Rpb24iLCJjbGFzc1NlbGVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9pdGVtcyIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJlbGVtZW50IiwicHJlcGVuZCIsIlBvcHVwV2l0aFN1Ym1pdCIsImFjdGlvbiIsIlVzZXJJbmZvIiwiam9iIiwiX2pvYiIsInRpdGxlIiwiYWJvdXQiLCJjdXN0b21GZXRjaCIsInVybCIsImhlYWRlcnMiLCJmZXRjaCIsInRoZW4iLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzVGV4dCIsImNhdGNoIiwiY29uc29sZSIsImxvZyIsImFwaSIsIkFwaSIsImJhc2VVcmwiLCJfYmFzZVVybCIsIl9oZWFkZXJzIiwiZGF0YSIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiY2FyZElkIiwiYXV0aG9yaXphdGlvbiIsImFsbCIsImdldEluaXRpYWxDYXJkcyIsImdldFVzZXJJbmZvIiwiY2FyZHMiLCJ1c2VySW5mbyIsImNyZWF0ZUNhcmQiLCJ1c2VyRGF0YSIsInNldFVzZXJJbmZvIiwiZXJyIiwibW9kYWxFZGl0QnV0dG9uIiwibW9kYWxQcm9maWxlRWRpdEJ1dHRvbiIsIm1vZGFsQWRkQnV0dG9uIiwibW9kYWxBZGRFbGVtZW50IiwibW9kYWxFZGl0RWxlbWVudCIsIm1vZGFsUHJvZmlsZUVsZW1lbnQiLCJwcm9maWxlTmFtZSIsInByb2ZpbGVBYm91dE1lIiwiZWxlbWVudFRlbXBsYXRlIiwiY29udGVudCIsIm1vZGFsSW1hZ2UiLCJzZXRFdmVudExpc3RlbmVycyIsIm1vZGFsQWRkIiwibG9hZGluZyIsImltYWdlbGluayIsImxvYWRlZCIsIm1vZGFsRWRpdCIsIm1vZGFsQ29uZmlybSIsIm1vZGFsUHJvZmlsZUVkaXQiLCJ1cGRhdGVQcm9maWxlIiwiYXZhdGFyIiwicHJvZmlsZWxpbmsiLCJpbml0aWFsQ2FyZHNSZW5kZXIiLCJvcGVuIiwiZWRpdENhcmRWYWxpZGF0b3IiLCJyZXNldFZhbGlkYXRpb24iLCJhZGRDYXJkVmFsaWRhdG9yIiwicHJvZmlsZUNhcmRWYWxpZGF0b3IiLCJlbmFibGVWYWxpZGF0aW9uIiwiY2FyZCIsInNldEFjdGlvbiIsImRlbGV0ZUNhcmQiLCJyZW1vdmVDYXJkIiwicmVtb3ZlTGlrZSIsImRpc2xpa2VDYXJkIiwibGlrZUNhcmQiLCJhZGRJdGVtIiwicmVuZGVyIl0sInNvdXJjZVJvb3QiOiIifQ==